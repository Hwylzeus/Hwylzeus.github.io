<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hackergame 2023 Summary</title>
      <link href="/2023/11/08/Hackergame2023-writeup/"/>
      <url>/2023/11/08/Hackergame2023-writeup/</url>
      
        <content type="html"><![CDATA[<h1>Hackergame2023-writeup</h1><h2 id="前言">前言</h2><p>算是本人第二次打Hackergame了，Hackergame还是一如既往的有趣好玩！爆赞！<br>这次比赛满打满算打了 3 天（10.28中午~10.30中午 + 11.3周五没啥课没啥作业），大三老狗课最多的一个学期（38学分专选的含金量），作业多实验报告多，时间不允许呜呜呜<br>10.30中午排名曾一度冲到105，由于和当时的第100名同分，所以四舍五入我也算上过榜了（逃<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231105162815.png" alt=""><br>（结束的前一天（周五）浅囤了点flag，结束前的一小时就交了）<br>最终总排名： 184 / 2386    最终校内排名： 13 / 64<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231105144217.png" alt=""><br>校内榜：<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231105144311.png" alt=""><br>还记得去年 1700 分都校内第 7 了，今年分数涨了一倍排名却反而跌了近一倍？？<br>不得不说鸭专今年打Hackergame是真的卷，进校内前10就能进总排前100了。。。感觉可能一来是校CTF战队宣传到位吧，听说暑假建了个CTF新生群，到现在也有了将近400人的规模；二来是赛前练兵练得好，上个学期GZ举办的校赛以及前不久的NewStarCTF都让新人得以很好的入门<br>而我作为半个校战队成员(？)，常年划水，只有每年的 Hackergame 才出来玩玩，感觉就是…时代变了，跟不上版本了</p><p>（因为 wp 交的比较迟而且rank不起眼估计没啥人看，同时也因为时间比较久了解题过程有些细节有遗忘，所以写的比较随意。。。望dalao们轻喷）</p><h2 id="正文">正文</h2><h3 id="0x00-Hackergame-启动">0x00 Hackergame 启动</h3><blockquote><p>大声喊出 Hackergame 启动，开始今年的冒险！</p></blockquote><p>今年的签到依旧整活，正常喊肯定解不出，根据去年签到题的经验，随便提交了一下，会发现地址栏末尾多了<code>/?similarity=</code>，加上 99.999999 然后回车即可获得 flag</p><p><code>flag&#123;W3!cOm3-70-HaCKergAM3-4nD-3Njoy-hacK1ng-ZoZ3&#125;</code></p><h3 id="0x01-猫咪小测">0x01 猫咪小测</h3><p>经典猫咪问答，不过感觉今年难度低了不少，可以爆破的小题也很容易爆出来</p><blockquote><ol><li>想要借阅世界图书出版公司出版的《A Classical Introduction To Modern Number Theory 2nd ed.》，应当前往中国科学技术大学西区图书馆的哪一层？<strong>（30 分）</strong> 提示：是一个非负整数。</li></ol></blockquote><p>不难搜索得到<a href="https://lib.ustc.edu.cn/%e6%9c%ac%e9%a6%86%e6%a6%82%e5%86%b5/%e9%a6%86%e8%97%8f%e5%88%86%e5%b8%83/">馆藏分布 | 中国科学技术大学图书馆 (ustc.edu.cn)</a><br>西区总共也就12层楼，排除掉明显是存放中文书刊的层剩下也就5层，挨个试就行，试出了分数就会增加<br>答案：<code>12</code></p><blockquote><ol start="2"><li>今年 arXiv 网站的天体物理版块上有人发表了一篇关于「可观测宇宙中的鸡的密度上限」的论文，请问论文中作者计算出的鸡密度函数的上限为 10 的多少次方每立方秒差距？<strong>（30 分）</strong> 提示：是一个非负整数。</li></ol></blockquote><p>懒得找了，10的多少次方每立方秒总不可能超过100吧，直接爆破，甚至没写脚本<br>答案：<code>23</code></p><blockquote><ol start="3"><li>为了支持 TCP BBR 拥塞控制算法，在<strong>编译</strong> Linux 内核时应该配置好哪一条内核选项？<strong>（20 分）</strong> 提示：输入格式为 CONFIG_XXXXX，如 CONFIG_SCHED_SMT。</li></ol></blockquote><p>直接搜索，这种有关Linux配置的文章肯定大把人写，然后把所有有关的配置选项挨个试<br>答案：<code>CONFIG_TCP_CONG_BBR</code></p><blockquote><ol start="4"><li>🥒🥒🥒：「我……从没觉得写类型标注有意思过」。在一篇论文中，作者给出了能够让 Python 的类型检查器 <s>MyPY</s> mypy 陷入死循环的代码，并证明 Python 的类型检查和停机问题一样困难。请问这篇论文发表在今年的哪个学术会议上？<strong>（20 分）</strong> 提示：会议的大写英文简称，比如 ISCA、CCS、ICML。</li></ol></blockquote><p>找个<a href="https://ccf.atom.im/">有分类的学术会议列表</a>，然后找到有关程序设计语言的学术会议，从A会到C会挨个试<br>答案：<code>ECOOP</code><br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104100926.png" alt=""></p><p><code>flag&#123;w31comE-t0-@773nD-THE-N3Ko-3XaM-2o23&#125;</code><br><code>flag&#123;R3@L-M4s7eR-of-7h3-neko-3X4M-IN-USTC&#125;</code></p><h3 id="0x02-更深更暗">0x02 更深更暗</h3><blockquote><p>…<br>「是我眼花了吗？我刚刚有一瞬间好像在残骸上看到了一个 flag？」小 C 惊讶地说。<br>…</p></blockquote><p>题目的这句话其实已经提示的很明显了<br>打开题目页面往下滑了两三千米发现是个无底洞，想着滑快点看看一万米以下会有什么，于是直接<strong>单击鼠标中键往下拉</strong>，不料flag马上映入眼帘，还真是“一瞬间”啊。。。<br>由于无法复制粘贴也无法屏幕截图，只好拿出手机拍照然后一个一个字符将flag打上去<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104102153.png" alt=""></p><p><code>flag&#123;T1t@n_575ba6de55c34eb362a13c6da73ce520&#125;</code></p><h3 id="0x03-旅行照片-3-0">0x03 旅行照片 3.0</h3><blockquote><p>你的学长去留学了，这一走短时间内怕是回不来了。于是，你在今年暑假来了一场计划已久的旅行，并顺路探望了这位久别的学长。翻阅当天拍下的照片，种种回忆和感慨油然而生。<br>请观察照片并结合所有文字内容，正确回答题目以获取 flag。</p></blockquote><p>其实我这题的正常社工解法只占半成，另外半成主要是靠爆破+运气（</p><h4 id="题目-1-2">题目 1-2</h4><blockquote><p>1、你还记得与学长见面这天是哪一天吗？（格式：yyyy-mm-dd）</p></blockquote><p>这题真的不会，我是脚本爆破出来的呜呜呜</p><p>答案：<code>2023-08-10</code></p><blockquote><p>2、在学校该展厅展示的所有同种金色奖牌的得主中，出生最晚者获奖时所在的研究所缩写是什么？</p></blockquote><p>首先通过识图可知这个金色奖牌是诺贝尔物理学奖<br>一开始没审题“该展示厅展示的”，找到<a href="https://en.wikipedia.org/wiki/Konstantin_Novoselov">Konstantin_Novoselov</a>去了，后来缩小范围，限定在“东京大学“的获奖者中找，找到了 <a href="https://en.wikipedia.org/wiki/Takaaki_Kajita">Takaaki Kajita</a><br>这哥们有两所研究所 ICRR 和 IPMU ，由于时间节点比较模糊不好确定是哪所，于是结合爆破脚本挨个试</p><p>答案：<code>ICRR</code><br><code>flag&#123;how_I_wi5h_i_COulD_w1N_A_Nobe1_pri23_5924da0997&#125;</code></p><h4 id="题目-3-4">题目 3-4</h4><blockquote><p>3、帐篷中活动招募志愿者时用于收集报名信息的在线问卷的编号（以字母 S 开头后接数字）是多少？</p></blockquote><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Screenshot%202023-10-29%20182102.png" alt=""><br>根据第一题得到的日期和图片的所在地点进行搜索，马上得到：<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104105708.png" alt=""><br>这个活动的<a href="https://home.ueno.kokosil.net/zh-hans/archives/77157">官网</a><br>然后划到最底下有<a href="https://umeshu-matsuri.jp/tokyo_staff/">志愿者招募的网址</a><br>问卷号就明摆着写在上面了<br>答案：<code>S495584522</code></p><blockquote><p>4、学长购买自己的博物馆门票时，花费了多少日元？</p></blockquote><p>根据上面的google map不难找到<a href="https://www.tnm.jp/modules/r_free_page/index.php?id=113#access_01">博物馆的官网</a><br>看了看票价规则，东大学生免费<br>答案：<code>0</code></p><p><code>flag&#123;PluM_w1NE_1S_rEa1LY_EXpen5iVE_d36221b5c8&#125;</code></p><h4 id="题目-5-6">题目 5-6</h4><blockquote><p>5、学长当天晚上需要在哪栋标志性建筑物的附近集合呢？（请用简体中文回答，四个汉字）</p></blockquote><p><s>搞学术那肯定是回自己的大学搞啊</s>，结合前面得到的地理位置信息，一开始没审题直接就填了东京大学<br>后面第6问怎么试都没对后开始重新审题，注意到关键词“标志性建筑物”，那可能指的是校园内某栋著名的楼，就像鸭大的怀士堂这样的，简单搜了下就填了安田讲堂<br>答案：<code>安田讲堂</code></p><blockquote><p>6、进站时，你在 JR 上野站中央检票口外看到「ボタン＆カフリンクス」活动正在销售动物周边商品，该活动张贴的粉色背景海报上是什么动物（记作 A，两个汉字）？ 在出站处附近建筑的屋顶广告牌上，每小时都会顽皮出现的那只 3D 动物是什么品种？（记作 B，三个汉字）？（格式：A-B）</p></blockquote><p>第 1 小问上google简单搜索一些上野站的<a href="https://www.instagram.com/p/Cvrw425vK_n/">图片</a>/<a href="https://www.youtube.com/watch?v=ug64NDRB_xU">视频</a>不难得出是熊猫</p><p>第 2 小问就上难度了，因为我找的视频都只在那个广告牌前停留了几秒，而且还很糊，看不清是什么，因此没法找到每小时都顽皮出现的动物。于是决定换个思路，照着广告牌上的电话号码搜，希望能找到广告视频源，搜到了<a href="https://nagata-lcv.com">他们的官网</a><br>但没有广告视频源，依然无法找到这个顽皮的动物<br>于是放弃挣扎，把所有可能的三字带品种（尤其是日本特有品种）的动物都列出来，直接开始爆破！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://202.38.93.111:12345/?token=1569%3AMEYCIQChEm%2B%2FL1svwKw3zlYKawZP%2BBc0%2BckciU%2FfknWjJrG%2FpwIhAN%2F%2F%2ByQDYGmFargWYXzHCGOb09lqMtPFjCLw8gKGreOu&#x27;</span></span><br><span class="line">driver = webdriver.Edge()</span><br><span class="line">driver.get(url)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">d = [<span class="string">&#x27;安田讲堂&#x27;</span>,<span class="string">&#x27;彩虹大桥&#x27;</span>,<span class="string">&#x27;东京大学&#x27;</span>]</span><br><span class="line">m = [<span class="string">&#x27;哈士奇&#x27;</span>,<span class="string">&#x27;秋田犬&#x27;</span>,<span class="string">&#x27;泰迪犬&#x27;</span>,<span class="string">&#x27;哈巴狗&#x27;</span>,<span class="string">&#x27;褐林鸮&#x27;</span>,<span class="string">&#x27;三花猫&#x27;</span>,<span class="string">&#x27;狸花猫&#x27;</span>,<span class="string">&#x27;玳瑁猫&#x27;</span>,<span class="string">&#x27;短尾猫&#x27;</span>,<span class="string">&#x27;短毛猫&#x27;</span>,<span class="string">&#x27;加菲猫&#x27;</span>,<span class="string">&#x27;暹罗猫&#x27;</span>,<span class="string">&#x27;缅甸猫&#x27;</span>,<span class="string">&#x27;波斯猫&#x27;</span>,<span class="string">&#x27;布偶猫&#x27;</span>,<span class="string">&#x27;折耳猫&#x27;</span>,<span class="string">&#x27;卷毛猫&#x27;</span>,<span class="string">&#x27;孟买猫&#x27;</span>,<span class="string">&#x27;埃及猫&#x27;</span>,<span class="string">&#x27;拉邦猫&#x27;</span>,<span class="string">&#x27;波斯猫&#x27;</span>,<span class="string">&#x27;食蚁兽&#x27;</span>,<span class="string">&#x27;鸭嘴兽&#x27;</span>,<span class="string">&#x27;树袋熊&#x27;</span>,<span class="string">&#x27;白头鹰&#x27;</span>,<span class="string">&#x27;啄木鸟&#x27;</span>,<span class="string">&#x27;信天翁&#x27;</span>,<span class="string">&#x27;布谷鸟&#x27;</span>,<span class="string">&#x27;金翅雀&#x27;</span>,<span class="string">&#x27;知更鸟&#x27;</span>,<span class="string">&#x27;猫头鹰&#x27;</span>,<span class="string">&#x27;变色龙&#x27;</span>,<span class="string">&#x27;娃娃鱼&#x27;</span>,<span class="string">&#x27;非洲鳄&#x27;</span>,<span class="string">&#x27;沙丁鱼&#x27;</span>,<span class="string">&#x27;金枪鱼&#x27;</span>,<span class="string">&#x27;萤火虫&#x27;</span>,<span class="string">&#x27;枪乌贼&#x27;</span>,<span class="string">&#x27;信天翁&#x27;</span>,<span class="string">&#x27;凤尾鱼&#x27;</span>,<span class="string">&#x27;安康鱼&#x27;</span>,<span class="string">&#x27;白头鹰&#x27;</span>,<span class="string">&#x27;金龟子&#x27;</span>,<span class="string">&#x27;大黄蜂&#x27;</span>,<span class="string">&#x27;纹白蝶&#x27;</span>,<span class="string">&#x27;凯门鳄&#x27;</span>,<span class="string">&#x27;银环蛇&#x27;</span>,<span class="string">&#x27;印度鳄&#x27;</span>,<span class="string">&#x27;珍珠鸡&#x27;</span>,<span class="string">&#x27;无须鳕&#x27;</span>,<span class="string">&#x27;寄居蟹&#x27;</span>,<span class="string">&#x27;土拨鼠&#x27;</span>,<span class="string">&#x27;嗜鱼蛇&#x27;</span>,<span class="string">&#x27;蜘蛛蟹&#x27;</span>,<span class="string">&#x27;凤尾蝶&#x27;</span>,<span class="string">&#x27;褐雨燕&#x27;</span>,<span class="string">&#x27;白喉雀&#x27;</span>,<span class="string">&#x27;扬子鳄&#x27;</span>,<span class="string">&#x27;墨海马&#x27;</span>,<span class="string">&#x27;梅花鹿&#x27;</span>,<span class="string">&#x27;藏羚羊&#x27;</span>,<span class="string">&#x27;白鳍豚&#x27;</span>,<span class="string">&#x27;小鳁鲸&#x27;</span>,<span class="string">&#x27;金丝猴&#x27;</span>,<span class="string">&#x27;棕果蝠&#x27;</span>,<span class="string">&#x27;鸭嘴兽&#x27;</span>,<span class="string">&#x27;山斑鸠&#x27;</span>,<span class="string">&#x27;丹顶鹤&#x27;</span>,<span class="string">&#x27;藏羚羊&#x27;</span>,<span class="string">&#x27;红蜻蜓&#x27;</span>,<span class="string">&#x27;红蜘蛛&#x27;</span>,<span class="string">&#x27;波斯猫&#x27;</span>,<span class="string">&#x27;折耳猫&#x27;</span>,<span class="string">&#x27;泰迪熊&#x27;</span>,<span class="string">&#x27;加菲猫&#x27;</span>,<span class="string">&#x27;小熊猫&#x27;</span>,<span class="string">&#x27;穿山甲&#x27;</span>,<span class="string">&#x27;长颈鹿&#x27;</span>,<span class="string">&#x27;食蚁兽&#x27;</span>,<span class="string">&#x27;北极狐&#x27;</span>,<span class="string">&#x27;无尾熊&#x27;</span>,<span class="string">&#x27;北极熊&#x27;</span>,<span class="string">&#x27;神仙鱼&#x27;</span>,<span class="string">&#x27;鰕虎鱼&#x27;</span>,<span class="string">&#x27;金枪鱼&#x27;</span>,<span class="string">&#x27;深海鱼&#x27;</span>,<span class="string">&#x27;杜父鱼&#x27;</span>,<span class="string">&#x27;鳢形目&#x27;</span>,<span class="string">&#x27;孔雀鱼&#x27;</span>,<span class="string">&#x27;啄木鸟&#x27;</span>,<span class="string">&#x27;信天翁&#x27;</span>,<span class="string">&#x27;纤毛虫&#x27;</span>,<span class="string">&#x27;肉足虫&#x27;</span>,<span class="string">&#x27;鼻涕虫&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> d:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> m:</span><br><span class="line">        bbb = driver.find_element(By.NAME,<span class="string">&#x27;Answer5&#x27;</span>)</span><br><span class="line">        ccc = driver.find_element(By.NAME,<span class="string">&#x27;Answer6&#x27;</span>)</span><br><span class="line">        bbb.send_keys(j)</span><br><span class="line">        ccc.send_keys(<span class="string">&quot;熊猫-&quot;</span>+i)</span><br><span class="line">        driver.find_elements(By.CLASS_NAME,<span class="string">&#x27;ui button&#x27;</span>)[<span class="number">2</span>].click()</span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        driver.refresh()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">120</span>)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>好吧是秋田犬<br>后面看官方wp才得知原来是我语文阅读理解错了，出站口指的是涩谷站出站口，难怪感觉马里奥世界的那张图片没啥用，原来是定位出站口用的。。。</p><p>答案：<code>熊猫-秋田犬</code><br><code>flag&#123;Un7I1_W3_M337_A64iN_6oODByE_S3n1OR_ca780b0d9f&#125;</code></p><h3 id="0x04-赛博井字棋">0x04 赛博井字棋</h3><blockquote><p>那一年的人机大战，是 AlphaGo 对阵柯洁，最终比分 3-0。当时我看见柯洁颓坐在椅子上泣不成声，这个画面我永生难忘。那一刻我在想，如果我能成为一名棋手，我一定要赢下人工智能。如今 AI 就在眼前，我必须考虑这会不会是我此生仅有的机会。重铸人类围棋荣光，我辈义不容辞！<br>……<br>但是围棋实在太难了，你决定先从井字棋开始练习。</p></blockquote><p>打开页面先是和 AI 玩了玩，发现不管怎么下都赢不了，后来得知井字棋存在”后手必不败“的理论<br>想到这是web题，于是打开 F12 进行一顿乱找，在”网络“里发现这个题目直接把 js代码 放网页上了，一打开网页就能收到这份代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">setMove</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (board[x][y] != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (frozen) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> url = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>; <span class="comment">// 获取当前 URL</span></span><br><span class="line">  <span class="keyword">let</span> data = &#123; <span class="attr">x</span>: x, <span class="attr">y</span>: y &#125;; <span class="comment">// 设置要发送的数据</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>, <span class="comment">// 设置方法为 POST</span></span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="comment">// 设置内容类型为 JSON</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data), <span class="comment">// 将数据转换为 JSON 格式</span></span><br><span class="line">  &#125;).<span class="title function_">catch</span>(errorHandler);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* main */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">clickedCell</span>(<span class="params">cell</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> x = cell.<span class="property">id</span>.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">var</span> y = cell.<span class="property">id</span>.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>)[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  asyncQueue.<span class="title function_">addTask</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">setMove</span>(x, y)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> response.<span class="title function_">json</span>()) <span class="comment">// 解析响应为 JSON</span></span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">renderBoard</span>(data); <span class="comment">// 渲染棋盘</span></span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单看了下里面的函数，有个<code>setMove(x, y)</code>是用来下棋的，但还需要等待响应，于是可以在控制台里调用这个函数先下个必嬴的三步，然后随便点一下空白的位置生成响应就赢了！</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231105163827.png" alt=""></p><h3 id="0x05-奶奶的睡前-flag-故事">0x05 奶奶的睡前 flag 故事</h3><blockquote><p>晴空万里的假期终于拍了拍翅膀飞来了。对于一心想扔掉教材、砸掉闹钟、跃向世界的 L 同学来说，期待了整整三年的跨国旅游大业终于是时候启动了，还能巧妙地顺带着做个美满的老友记。<br>可是，哎哟喂，他刚踩上波光粼粼的金沙海滩，那他最疼爱的华为手机就跟着海风一起去约会了大海，连他的钱包也在这场未知探索之旅中神秘失踪。<br>「这个地方怎么连个华为手机都不卖。若是买个苹果手机，心疼的是它连个实体 SIM 卡槽都藏起来了，回国肯定成了个大摆设。不如来个<strong>谷歌的『亲儿子』</strong>？」L 同学踌躇满志地嘀咕道。<br>那时，像是上天的安排，「咱这儿正好有个<strong>谷歌『亲儿子』</strong> 的老手机，你拿去逍遥吧」。<br>L 同学满眼星光地接过，<strong>连系统都没心思升级</strong>，就开始疯狂安装那个久闻大名的 GPT 程序，甚至雀跃地在群里晒出一张跟 GPT 对话的精彩<strong>截图</strong>，一时间成为了群里的焦点人物。</p></blockquote><p>这题我一开始没头绪，找不到切入点，尝试过常规misc图片隐写的解法，将图片丢入stegsolve但发现没用<br>后来根据题目的粗体关键词，一瞬间联想到我很久以前看到的<a href="https://mp.weixin.qq.com/s/ZgwqGtq-tC1ib-5ElDsSUg">一篇公众号文章</a><br>一拍脑门，哎这不就是那个漏洞吗！<br>把图片丢进<a href="https://acropalypse.app/">Acropalypse</a>这个网站上，手机型号选Pixel 4就解出来了<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104111148.png" alt=""></p><p><code>flag&#123;sh1nj1ru_k0k0r0_4nata_m4h0&#125;</code></p><h3 id="0x06-组委会模拟器">0x06 组委会模拟器</h3><blockquote><p>每年比赛，组委会的一项重要工作就是时刻盯着群，并且撤回其中有 flag 的消息。今年因为人手紧张，组委会的某名同学将这项工作外包给了你，你需要连续审查 1000 条消息，准确无误地撤回其中所有含 flag 的消息，并且不撤回任何不含 flag 的消息。<br>本题中，你需要撤回的 “flag” 的格式为 <strong><code>hack[...]</code></strong>，其中<strong>方括号</strong>内均为小写英文字母，点击消息即可撤回。你需要在 3 秒内撤回消息，否则撤回操作将失败。在全部消息显示完成后等待几秒，如果你撤回的消息完全正确（撤回了全部需要撤回的消息，并且未将不需要撤回的消息撤回），就能获得本题<strong>真正的 flag</strong>。</p></blockquote><p>这题我的脚本比较简单，用的selenium，大概思路就是通过<code>while True</code>进行轮询，实现实时获取最新的聊天气泡，若气泡含有<code>hack[</code>就单击<br>这里有一个必须优化的地方，否则到了大约200条信息时效率会变得极差，会严重超时<br>那就是每一次轮询以后遍历气泡是否满足条件是从上一次遍历结束的地方开始，也就是要另设一个变量<code>j</code>进行记录，<code>i</code>每次都从<code>j</code>开始，这样效率会大幅提升<br>但我这个脚本似乎天然存在可能会导致气泡定位错位的bug，怎么调都调不好，又因为聊天气泡的生成是随机的<br>因此存在一定的运气成分，在运行的过程中需要双手合十🙏祈祷脚本不要漏点也不要错点到诈骗视频去，这样就会有大概 10% 的机率通过此题（</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://202.38.93.111:10021/?token=1569%3AMEYCIQChEm%2B%2FL1svwKw3zlYKawZP%2BBc0%2BckciU%2FfknWjJrG%2FpwIhAN%2F%2F%2ByQDYGmFargWYXzHCGOb09lqMtPFjCLw8gKGreOu&#x27;</span></span><br><span class="line">driver = webdriver.Edge()</span><br><span class="line">driver.get(url)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">0.5</span>)</span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    bbb = driver.find_elements(By.CLASS_NAME,<span class="string">&#x27;fakeqq-message__bubble&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(j,<span class="built_in">len</span>(bbb),<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> i&lt;=j <span class="keyword">and</span> <span class="string">&quot;hack[&quot;</span> <span class="keyword">in</span> bbb[i].text:</span><br><span class="line">            bbb[i].click()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        j = j+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">120</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104115037.png" alt=""></p><h3 id="0x07-虫">0x07 虫</h3><blockquote><p>「生而为人，应该能够换尿布、策划入侵、杀猪、开船、造房子、写十四行诗、算账、建墙、正骨、抚慰临终之人、接受命令、下达命令、合作、独行、解决方程式、分析新问题、清理马粪、编程、烹饪美食、高效战斗、英勇牺牲。专业分工是给昆虫准备的。」—罗伯特·海莱恩（Robert Heinlein）<br>你觉得还是当昆虫轻松一些。<br>这时，你看到一只昆虫落在你面前，发出奇怪的叫声。你把这段声音录制了下来：这听起来像是一种<strong>通过无线信道传输图片的方式</strong>，如果精通此道，或许就可以接收来自国际空间站（ISS）的图片了。</p></blockquote><p>根据题目信息”无线信道传输图片的方式“”ISS“进行google搜索，可知是慢扫描电视<a href="https://www.camras.nl/en/blog/2021/receiving-images-from-the-iss-through-websdr/">SSTV</a>，在windows上能用的工具是<a href="https://www.qsl.net/on6mu/rxsstv.htm">RX-SSTV</a><br>然后用手机播放音频，电脑进行解码就可以了<br>因为没用虚拟声卡进行内录，所以得到的图像比较模糊，且噪声较多，但还是不难分辨出flag的<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104110836.png" alt=""><br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104111039.png" alt=""></p><p><code>flag&#123;SSssTV_y0u_W4NNa_HaV3_4_trY&#125;</code></p><h3 id="0x08-JSON-⊂-YAML">0x08 JSON ⊂ YAML?</h3><p>第一问直接google搜索，找到<a href="https://stackoverflow.com/questions/21584985/what-valid-json-files-are-not-valid-yaml-1-1-files">What valid JSON files are not valid YAML 1.1 files? - Stack Overflow</a></p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104115026.png" alt=""></p><p>第二问没找到，也没有往重复键的方向去想呜呜呜</p><h3 id="0x09-Git-Git">0x09 Git? Git!</h3><p>bing 简单搜索<a href="https://blog.csdn.net/jerechen/article/details/96469183">git恢复删除</a>，可得<code>git reflog</code>和<code>git checkout -b fix xxx</code>，进行恢复再看看修改的地方就可获得flag<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231105163631.png" alt=""></p><h3 id="0x10-HTTP-集邮册">0x10 HTTP 集邮册</h3><blockquote><p>「HTTP 请求一瞬间就得到了响应，但是，HTTP 响应的 status line、header 和 body 都是确实存在的。如果将一个一个 HTTP 状态码收集起来，也许就能变成……变成……变成……」<br>「flag？」<br>「就能变成 flag！」</p></blockquote><p>这题是我想复杂了，我还以为需要构造很巧妙又很长的请求头才能收集到所有状态码。。。</p><p>只尝试了最简单的5个：<br>200：点击就送<br>400：xjb乱写<br>404：在&quot;/&quot;后乱加<br>405：把GET改成DELETE<br>505：把HTTP改成2以上</p><h3 id="0x11-Docker-for-Everyone">0x11 Docker for Everyone</h3><blockquote><p>X 是实验室机器的管理员，为了在保证安全的同时让同学们都用上 docker，他把同学的账号加入了 docker 用户组，这样就不需要给同学 sudo 权限了！<br>但果真如此吗？<br>提供的环境会自动登录低权限的 <code>hg</code> 用户。登录后的提示信息显示了如何在该环境中使用 docker。读取 <code>/flag</code>（注意其为软链接）获取 flag。</p></blockquote><p>直接 bing 搜索”docker 非root 提权 漏洞“不难找到<a href="https://blog.csdn.net/hanxiaotongtong/article/details/124289077">【docker系列】容器有个bug-非root用户提权_logrotate 容器 提权</a><br>可知宿主机目录的文件可以被挂载，于是可以直接挂载/dev/shm/flag，在容器里cat即可<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104111258.png" alt=""></p><p><code>flag&#123;u5e_r00t1ess_conta1ner_8b84bd1e61_plz!&#125;</code></p><h3 id="0x12-惜字如金-2-0">0x12 惜字如金 2.0</h3><blockquote><p>附件包括了一个用于打印本题目 flag 的程序，且已经经过惜字如金化处理。你需要做的就是得到程序的执行结果。</p></blockquote><p>今年的惜字如金明显是简单了很多，只需要恢复被惜字如金化的程序再运行就好<br>注意到<code>cod_dict</code>每行都少了一个字符，于是可以根据<code>flag&#123;</code>以及<code>&#125;</code>推测缺了什么，推的时候可能会出错，具体推导细节我忘了，多试几次就好</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The size of the file may reduce after XZRJification</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_equals</span>(<span class="params">left, right</span>):</span><br><span class="line">    <span class="comment"># check whether left == right or not</span></span><br><span class="line">    <span class="keyword">if</span> left != right: exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_cod_dict</span>():</span><br><span class="line">    <span class="comment"># prepare the code dict</span></span><br><span class="line">    cod_dict = []</span><br><span class="line">    cod_dict += [<span class="string">&#x27;nymeh1niwemflcir&#125;echaete&#x27;</span>]</span><br><span class="line">    cod_dict += [<span class="string">&#x27;a3g7&#125;kidgojernoetlsup?he&#x27;</span>]</span><br><span class="line">    cod_dict += [<span class="string">&#x27;uulw!f5soadrhwnrsnstnoeq&#x27;</span>]</span><br><span class="line">    cod_dict += [<span class="string">&#x27;_ct&#123;l-findiehaai&#123;oveatase&#x27;</span>]</span><br><span class="line">    cod_dict += [<span class="string">&#x27;ty9kxborszstguyd?!blm-pe&#x27;</span>]</span><br><span class="line">    <span class="comment"># check_equals(set(len(s) for s in cod_dict), &#123;24&#125;)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(cod_dict)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_data</span>(<span class="params">input_codes</span>):</span><br><span class="line">    <span class="comment"># retrieve the decrypted data</span></span><br><span class="line">    cod_dict = get_cod_dict()</span><br><span class="line">    output_chars = [cod_dict[c] <span class="keyword">for</span> c <span class="keyword">in</span> input_codes]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(output_chars)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># check som obvious things</span></span><br><span class="line">    check_equals(<span class="string">&#x27;create&#x27;</span>, <span class="string">&#x27;cre&#x27;</span> + <span class="string">&#x27;ate&#x27;</span>)</span><br><span class="line">    check_equals(<span class="string">&#x27;referrer&#x27;</span>, <span class="string">&#x27;refer&#x27;</span> + <span class="string">&#x27;rer&#x27;</span>)</span><br><span class="line">    <span class="comment"># check th flag</span></span><br><span class="line">    flag = decrypt_data([<span class="number">53</span>, <span class="number">41</span>, <span class="number">85</span>, <span class="number">109</span>, <span class="number">75</span>, <span class="number">1</span>, <span class="number">33</span>, <span class="number">48</span>, <span class="number">77</span>, <span class="number">90</span>,</span><br><span class="line">                         <span class="number">17</span>, <span class="number">118</span>, <span class="number">36</span>, <span class="number">25</span>, <span class="number">13</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">3</span>, <span class="number">63</span>, <span class="number">25</span>,</span><br><span class="line">                         <span class="number">31</span>, <span class="number">77</span>, <span class="number">27</span>, <span class="number">60</span>, <span class="number">3</span>, <span class="number">118</span>, <span class="number">24</span>, <span class="number">62</span>, <span class="number">54</span>, <span class="number">61</span>,</span><br><span class="line">                         <span class="number">25</span>, <span class="number">63</span>, <span class="number">77</span>, <span class="number">36</span>, <span class="number">5</span>, <span class="number">32</span>, <span class="number">60</span>, <span class="number">67</span>, <span class="number">113</span>, <span class="number">28</span>])</span><br><span class="line">    <span class="comment"># print(flag)</span></span><br><span class="line">    check_equals(flag.index(<span class="string">&#x27;flag&#123;&#x27;</span>), <span class="number">0</span>)</span><br><span class="line">    check_equals(flag.index(<span class="string">&#x27;&#125;&#x27;</span>), <span class="built_in">len</span>(flag) - <span class="number">1</span>)</span><br><span class="line">    <span class="comment"># print th flag</span></span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p><code>flag&#123;you-ve-r3cover3d-7he-an5w3r-r1ght?&#125;</code></p><h3 id="0x13-高频率星球">0x13 高频率星球</h3><blockquote><p>高频率星人的视觉输入频率极高，可以一目千行、过目不忘，他们的交流对地球人来说过于超前了。flag 被藏在了这段代码中，但是现在只有高频率星人在终端浏览代码的时候，使用 <a href="https://asciinema.org/">asciinema</a> 录制的文件了，你能从中还原出代码吗？</p></blockquote><p>这题我是先<code>asciinema play asciiname_restore.rec &gt; flag.js</code>进行获取输出<br>然后vscode打开<code>flag.js</code>把前后明显是shell的部分删掉，中间会残留一些less分页导致的乱七八糟的字符串，可以<code>ctrl+H</code>进行批量删除<br>之后搭好nodejs环境，<code>node flag.js</code>就解决了</p><h3 id="0x14-小型大语言模型星球">0x14 小型大语言模型星球</h3><blockquote><p>茫茫星系间，文明被分为不同的等级。每一个文明中都蕴藏了一种古老的力量 —— flag，被认为是其智慧的象征。<br>你在探索的过程中意外进入了一个封闭空间。这是一个由神秘的 33M 参数的「小型大语言模型」控制着的星球。星球的中心竖立着一个巨大的三角形任务牌，上面刻着密文和挑战。<br>在这个星球上，你需要与这个先进的语言模型展开一场交流。通过与它对话，诱导它说出指定的词语，从这个神秘智慧体中获得 flag。你需要让这个语言模型分别说出 you are smart，accepted，hackergame 和 🐮，以获得四个 flag，证明你足够聪明以控制这个星球的命运。</p></blockquote><p>第一题简单，随便写写应该都能过<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104115141.png" alt=""></p><p>第二题尝试过”acce“”accep“”accept“”accepte“之类的prompt试图让其补全，也尝试过”reject“”idea“”deny“之类相关的词，但都以失败告终<br>后来想到既然你每次回答都是独立的，且生成有很大程度的随机性，于是想到可以写个脚本每次随机生成7个不同的字符进行暴力payload，但效率太低，试了一个小时后还没出结果<br>于是进行改进，开头是第一随机字符，后接”accept“，很快就出了！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://202.38.93.111:10101/?token=1569%3AMEYCIQChEm%2B%2FL1svwKw3zlYKawZP%2BBc0%2BckciU%2FfknWjJrG%2FpwIhAN%2F%2F%2ByQDYGmFargWYXzHCGOb09lqMtPFjCLw8gKGreOu&#x27;</span></span><br><span class="line">driver = webdriver.Edge()</span><br><span class="line">driver.get(url)</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">s = string.ascii_letters</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    bbb = driver.find_element(By.CSS_SELECTOR,<span class="string">&#x27;#component-7 &gt; label &gt; textarea&#x27;</span>)</span><br><span class="line">    bbb.send_keys(random.choice(s)+<span class="string">&quot;accept&quot;</span>)</span><br><span class="line">    driver.find_element(By.ID,<span class="string">&#x27;component-8&#x27;</span>).click()</span><br><span class="line">    time.sleep(<span class="number">10</span>)</span><br><span class="line">time.sleep(<span class="number">120</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104111413.png" alt=""></p><p><code>flag&#123;yOu-ArE-accEP73d-tO-C0n71NuE-ThE-94ME&#125;</code></p><h3 id="0x15-流式星球">0x15 流式星球</h3><blockquote><p>流式星人用流式数据交流，比如对于视频来说，他们不需要同时纵览整个画面，而是直接使用像素流。为了方便理解，你把这个过程写成了一个 Python 脚本（见附件），flag 就藏在这个视频（见附件）中。尽管最后丢掉了一部分数据，你能把 flag 还原出来吗？</p></blockquote><p>根据题目提供的 Python 脚本可知题意大概为：将一个转换成了像素流且末尾随机丢弃了0~100个bit的二进制文件还原为原视频<br>可以拷问GPT老师，然后根据GPT提供的整体框架自己再进行一些小修小改便可得如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reconstruct_video</span>(<span class="params">input_file, output_file</span>):</span><br><span class="line">   <span class="comment"># 读取二进制数据流文件</span></span><br><span class="line">   <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">       data = f.read()</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> frame_height <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>,<span class="number">250</span>,<span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> frame_width <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>,<span class="number">500</span>,<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">135146687</span>+i) % (<span class="number">3</span> * frame_height * frame_width) == <span class="number">0</span> :</span><br><span class="line"></span><br><span class="line">                buffer = np.frombuffer(data, dtype=np.uint8)</span><br><span class="line">                buffer = np.append(buffer, buffer[-i:-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(frame_height,frame_width,<span class="built_in">len</span>(buffer))</span><br><span class="line">                frame_count = <span class="built_in">int</span>(<span class="built_in">len</span>(buffer) / (<span class="number">3</span> * frame_height * frame_width))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(buffer) % (<span class="number">3</span> * frame_height * frame_width) == <span class="number">0</span> <span class="keyword">and</span> frame_count &gt; <span class="number">20</span>:</span><br><span class="line"></span><br><span class="line">                    buffer = buffer.reshape((frame_count, frame_height, frame_width, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">                    out = cv2.VideoWriter(output_file+<span class="built_in">str</span>(frame_height)+<span class="string">&#x27;x&#x27;</span>+<span class="built_in">str</span>(frame_width)+<span class="string">&quot;.mp4&quot;</span>, cv2.VideoWriter_fourcc(*<span class="string">&#x27;mp4v&#x27;</span>), <span class="number">20.0</span>, (frame_width, frame_height))</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> frame <span class="keyword">in</span> buffer:</span><br><span class="line">                        out.write(frame)</span><br><span class="line"></span><br><span class="line">                    out.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    reconstruct_video(<span class="string">&quot;video.bin&quot;</span>, <span class="string">&quot;video&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大概的流程就是先通过遍历补齐视频流文件末尾缺失的bit，先判定补齐后的字节数符不符合要求，符合才进行输出，不符合则继续遍历<br>然后帧率可以不用管，只是播放速度快慢的区别<br>接着根据题目提供的脚本进行逆向，最后输出mp4文件就可以了<br>其实<code>frame_heigt</code>和<code>frame_width</code>都可以遍历50~1000的，这样就能得标准答案<code>frame_heigt=729, frame_width=427</code>，但我先入为主以为视频一般都是横屏的且应该不会太大就没有尝试扩大范围，好在依然能够解出该题（</p><p>最后会生成几十个 mp4 文件，开超大图标进行速览<br>会发现有个视频与众不同，点开看便能发现flag<br><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104111514.png" alt=""></p><p><code>flag&#123;it-could-be-easy-to-restore-video-with-haruhikage-even-without-metadata-0F7968CC&#125;</code></p><h3 id="0x16-低带宽星球-小试牛刀">0x16 低带宽星球(小试牛刀)</h3><blockquote><p>茫茫星系间，文明被分为不同的等级。每一个文明中都蕴藏了一种古老的力量 —— flag，被认为是其智慧的象征。<br>你在探索的过程中意外进入了一个封闭空间。这是一个由神秘的低带宽星人控制着的星球。星球的中心竖立着一个巨大的三角形任务牌，上面刻着密文和挑战。<br>低带宽星人的通信速度很低，只能以 1 字节 / 天的速度接受信息，所以在这个星球上，你需要将一张图片用很少的字节数传输给低带宽星人，然后获得 flag。具体来说你需要将一张图片无损压缩（每个像素的颜色都一致）：</p><ul><li>压缩至 2KiB (2048 字节) 及以下，获得 flag1</li><li>压缩至 50 字节及以下，获得 flag2</li></ul></blockquote><p>bing或google简单搜索不难得国外这个专门做图片压缩的网站<br><a href="https://tinypng.com/">TinyPNG – Compress WebP, PNG and JPEG images intelligently</a><br>将图片丢进去就可以压缩到满足第一题的要求，1.3kb</p><p>第二题试图写 SVG，但发现我写的 SVG 甚至比第一题的压缩还大，遂放弃</p><h3 id="0x17-异星歧途">0x17 异星歧途</h3><blockquote><p>…<br>你的任务是在不进行任何其他操作的情况下拨动这 32 个按钮，使冲击反应堆能够<strong>稳定运行</strong>。<br>…</p></blockquote><p>刚进游戏啥也不懂xjb乱点，炸了好几次…<br>后来开了个新游戏过了一下新手教程，大致懂了每个元件都有什么功能<br>后面就主要是根据逻辑处理器的类汇编代码有序拨动开关了</p><p><strong>Part 1</strong><br>最容易的一组，全部取反就行<br><strong>Part 2</strong><br>可以在逻辑处理器代码页面的下方”变量“看到变量的实时变化，这样能够直观进行理解<br>F10 是 i 的平方，number 是这组 8 个开关组成的 8 位二进制对应的 10 进制数，但有时会不稳定（值-4，猜测是时钟尖刺，未考证），但影响不大，能保证供电就行<br>要跳出代码的循环以启动供电，就需要使 F10 == number，所以需要构造 F10<br>又因为前提是 SW1 和 SW6 必须是 1，且SW8不能乱动，否则会导致 Part3 炸掉<br>所以只能从剩下 5 个开关里构造，使整个二进制为一个平方数<br>不难试出，只有拨动 SW2 才能满足<br><strong>Part 3</strong><br>这部分需要首先理解每个元件的功能和游戏逻辑<br>要达到的目标是使反应堆启动但又不能爆炸，这就需要保证足够的冷却液提供，因此冷却液不能有泄露<br>要提供冷却液那么首先要提供水并启动混合器，并打开两个传送带的控制门，确保原料供应<br>按照这个逻辑，结合代码进行尝试即可，因为开关的先后顺序不同可能会导致有不稳定的多解，可以挨个尝试直到找到稳定的序列<br><strong>Part 4</strong><br>这题的逻辑处理器只是告知了每个开关一一对应了下面的8个电力源，重点是要使下面的门电路导通<br>我也看不懂这些门电路，但逐个尝试还是能发现些规律的，具体什么规律我忘了，总之就是试出来的（</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/Pasted%20image%2020231104115059.png" alt=""></p><p>最终序列为：<code>10100101110001001000110001110111</code></p><p><code>flag&#123;B34WarE_0f_#xp1osi0N_6860831ff3&#125;</code></p><h2 id="总结">总结</h2><p>虽说本次 Hackergame 我没有太过执着于追求 rank，只是抱着解不出来就算了等赛后看 wp 学习的佛系心态，但对比别人 wp 体现出的解题思路，我发现我尚存在以下问题：</p><ol><li>不够信任 AI 工具。看了一些选手的题解，发现有些题是可以让 ChatGPT/New Bing 写代码解出来的，如 HTTP集邮册、YAML、LD_PRELOAD 这些</li><li>google 和看文档的能力不行。很多时候都get不到搜索结果或文档里有利于解题的关键点，prompt技巧 和 英语阅读水平 还需要再提高</li><li>代码能力也不太行。python使用不够熟练，一些包的基本用法不了解，需要 coding 的题大多不敢尝试</li></ol><p>明年有机会一定还来！</p><p>2023/11/07 23:11</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackergame 2022 Summary</title>
      <link href="/2022/10/30/Hackergame2022-writeup/"/>
      <url>/2022/10/30/Hackergame2022-writeup/</url>
      
        <content type="html"><![CDATA[<h1>Hackergame2022-writeup</h1><h2 id="前言">前言</h2><p>​算是我人生第一次正式打CTF比赛，并且还是在22号晚上查资料时偶然间想起今天有这么个比赛开打，才抱着试一试的心态注册的这个号，很轻松地过了签到题和旅行照片的前半部分，感觉还蛮有意思的，从此便一发不可收拾……</p><p>​最终总分<code>1750</code>，中大组内rank<code>7/66</code>，感觉还行（没达到预期，本来还想着再过两题冲2000分的呜呜呜）</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/image-20221029201537725.png" alt="image-20221029201537725"></p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/image-20221029225237674.png" alt="image-20221029225237674"></p><p>​这一周下来对自己的四字总结便是：<strong>人菜瘾大</strong>。</p><h2 id="正文">正文</h2><h3 id="0x00-签到">0x00 签到</h3><blockquote><p>众所周知，签到题是一道手速题。</p><p>为了充分发挥出诸位因为各种原因而手速优异于常人的选手们的特长，我们精心设计了今年的签到题。进一步地，为了更细致地区分不同手速的选手，我们还通过详尽的调研及统计分析，将签下字符的时间限制分为了多个等级。只有最顶尖的手速选手，才能在 CPU 来得及反应之前顺利签下 2022，从而得到光荣的 flag！</p></blockquote><p>刚开始发现后两个块在某些特定区域签会识别出特定的数字，并且还真识别出了2，但要连续两次都靠一个点识别出2实在困难，遂放弃。试着提交了一下，发现地址栏多了个结果参数<code>/?result=????</code>，将后四位改成2022即可获得flag。</p><p><code>flag&#123;HappyHacking2022-024d76c07d&#125;</code></p><h3 id="0x01-猫咪问答喵">0x01 猫咪问答喵</h3><blockquote><ol><li>中国科学技术大学 NEBULA 战队（USTC NEBULA）是于何时成立的喵？<br>提示：格式为 YYYY-MM，例如 2038 年 1 月即为 2038-01。</li></ol></blockquote><p>不难搜索得到<a href="http://cybersec.ustc.edu.cn/2022/0826/c23847a565848/page.htm">这篇新闻稿</a></p><p>划到最后：<code>中国科学技术大学“星云战队（Nebula）”成立于2017年3月，“星云”一词来自......</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2017-03</span><br></pre></td></tr></table></figure><blockquote><ol start="2"><li>2022 年 9 月，中国科学技术大学学生 Linux 用户协会（LUG @ USTC）在科大校内承办了软件自由日活动。除了专注于自由撸猫的主会场之外，还有一些和技术相关的分会场（如闪电演讲 Lightning Talk）。其中在第一个闪电演讲主题里，主讲人于 slides 中展示了一张在 GNOME Wayland 下使用 Wayland 后端会出现显示问题的 KDE 程序截图，请问这个 KDE 程序的名字是什么？<br>提示：英文单词，首字母大写，其他字母小写。</li></ol></blockquote><p>在中科大Linux协会的官网随便逛逛可发现<a href="https://www.bilibili.com/video/BV11e411M7t9/?vd_source=1d5b40f16b498950164874e8818fd4b5">活动上传到b站上的回放</a>，拉动进度条到最后闪电演讲环节讲GNOME Wayland的部分，可以发现的确有这么张 KDE 程序截图，刚开始仔细听了几遍也没听清主讲人念的是哪个英文单词，最后试着将视频的截图放大可发现一个叫Kdenlive的单词即为主讲人所提的那个程序名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Kdenlive</span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>22 年坚持，小 C 仍然使用着一台他从小用到大的 Windows 2000 计算机。那么，在不变更系统配置和程序代码的前提下，Firefox 浏览器能在 Windows 2000 下运行的最后一个大版本号是多少？<br>提示：格式为 2 位数字的整数。</li></ol></blockquote><p>直接百度无脑搜索“Firefox 浏览器能在 Windows 2000 下运行的最后一个大版本号是多少？”，可得<a href="https://ask.zol.com.cn/x/10371082.html">哪个firefox版本还能用Win2000-ZOL问答</a>，经提交答案测试，“12”即为本题答案。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>你知道 PwnKit（CVE-2021-4034）喵？据可靠谣传，出题组的某位同学本来想出这样一道类似的题，但是发现 Linux 内核更新之后居然不再允许 argc 为 0 了喵！那么，请找出在 Linux 内核 master 分支（torvalds/linux.git）下，首个变动此行为的 commit 的 hash 吧喵！<br>提示：格式为 40 个字符长的 commit 的 SHA1 哈希值，字母小写，注意不是 merge commit。</li></ol></blockquote><p>不难通过搜索找到<a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/">Linus Torvalds本尊亲自维护的仓库</a>，在log页可以看到每次的更新内容，点进去还能查到其他详细的信息，在页面的右上搜索框搜索“argc”可进行初步筛选。不允许argc为0即意味着argv不能为空，则更新<code>exec: Force single empty string when argv is empty</code>正好与之匹配，对应的commit即为本题答案。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dcd46d897adb70d63e025f175a00a89797d31a43</span><br></pre></td></tr></table></figure><blockquote><ol start="5"><li>通过监视猫咪在键盘上看似乱踩的故意行为，不出所料发现其秘密连上了一个 ssh 服务器，终端显示 <code>ED25519 key fingerprint is MD5:e4:ff:65:d7:be:5d:c8:44:1d:89:6b:50:f5:50:a0:ce.</code>，你知道猫咪在连接什么域名吗？<br>提示：填写形如 <a href="http://example.com">example.com</a> 的二级域名，答案中不同的字母有 6 个。</li></ol></blockquote><p>本题我是放在最后做的，因为实在是找不到（太菜了），不了解啥是ssh服务器，尝试过将那段密钥放进各种在线解密网站进行MD5解密都不成功，也尝试过百度和google直接搜那段密钥，翻了好几页都没发现什么有价值的信息（不过听说有群友在bing上搜索可以直接找到？？！自己后来试了下还真可以！震惊一整年！u1s1，bing在我心中一直处于中文搜索不如百度，英文搜索不如google的地位，看来以后不能再小看bing了。。。）</p><p>根据补充的信息，答案共有6个字母且互不相同，那么可直接用我们熟知的顶级域名<code>.com</code>、<code>.net</code>、<code>.org</code>等依次爆破，附上爆破脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">s.get(<span class="string">&quot;http://202.38.93.111:10002/?token=2593%3AMEYCIQCgPe8GxtvaFUxSBdIURZ5SvQHoGKfGiDL7AD%2FNlTAsOwIhANbbQZFmmOTYergmTGL0S2ekb5%2BEy2TyvenoHL95hEbx&quot;</span>)</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;result.csv&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;abcdefhijklmnpqstuvwxyz&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&#x27;abcdefhijklmnpqstuvwxyz&#x27;</span>:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="string">&#x27;abcdefhijklmnpqstuvwxyz&#x27;</span>:</span><br><span class="line">            ret = s.post(<span class="string">&quot;http://202.38.93.111:10002/&quot;</span>, &#123;</span><br><span class="line">                <span class="string">&quot;q1&quot;</span>: <span class="string">&quot;2017-03&quot;</span>,</span><br><span class="line">                <span class="string">&quot;q2&quot;</span>: <span class="string">&quot;Kdenlive&quot;</span>,</span><br><span class="line">                <span class="string">&quot;q3&quot;</span>: <span class="string">&quot;12&quot;</span>,</span><br><span class="line">                <span class="string">&quot;q4&quot;</span>: <span class="string">&quot;dcd46d897adb70d63e025f175a00a89797d31a43&quot;</span>,</span><br><span class="line">                <span class="string">&quot;q5&quot;</span>: i+j+k+<span class="string">&quot;.org&quot;</span>,</span><br><span class="line">                <span class="string">&quot;q6&quot;</span>: <span class="string">&quot;2003-03-01&quot;</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;但是只够第一个&quot;</span> <span class="keyword">in</span> ret.text:</span><br><span class="line">                <span class="built_in">print</span>(i+j+k+<span class="string">&quot;.org&quot;</span>, <span class="string">&quot;X&quot;</span>)</span><br><span class="line">                f.write(i+j+k+<span class="string">&quot;.org X&quot;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(i+j+k+<span class="string">&quot;.org&quot;</span>, <span class="string">&quot;Corect!&quot;</span>)</span><br><span class="line">                f.write(i+j+k+<span class="string">&quot;.org Corect!&quot;</span> + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                f.close()</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最后可得答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sdf.org</span><br></pre></td></tr></table></figure><blockquote><ol start="6"><li>中国科学技术大学可以出校访问国内国际网络从而允许云撸猫的“网络通”定价为 20 元一个月是从哪一天正式实行的？<br>提示：格式为 YYYY-MM-DD，例如 2038 年 1 月 1 日，即为 2038-01-01。</li></ol></blockquote><p>先在百度随便搜搜可初步定位答案必定藏在<a href="https://ustcnet.ustc.edu.cn/main.htm">中科大网络信息中心官网</a>（因为里面各种新闻文件是真的多，日期甚至可以追溯到上世纪末。。。），但由于该官网没有搜索功能，于是可想到借助百度的高级搜索，限定只在该网站进行搜索，搜索关键字全部填上“网络通”，并限定时间在2011年之前（因为之前试过2011那个发现不对），可得如下结果：</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/bdss.png" alt="屏幕截图 2022-10-24 104701"></p><p>经比对不难得知本题答案为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2003-03-01</span><br></pre></td></tr></table></figure><p><strong>flag1:</strong><code>flag&#123;meowexammeow_772b498346fe0925_b98c77c702&#125;</code></p><p><strong>flag2:</strong><code>flag&#123;meowexamfullymeowed!_6c159adddb7f171b_071bdcae54&#125;</code></p><h3 id="0x02-家目录里的秘密">0x02 家目录里的秘密</h3><blockquote><p>实验室给小 K 分配了一个高性能服务器的账户，为了不用重新配置 VSCode, Rclone 等小 K 常用的生产力工具，最简单的方法当然是把自己的家目录打包拷贝过去。</p><p>但是很不巧，对存放于小 K 电脑里的 Hackergame 2022 的 flag 觊觎已久的 Eve 同学恰好最近拿到了这个服务器的管理员权限（通过觊觎另一位同学的敏感信息），于是也拿到了小 K 同学家目录的压缩包。</p><p>然而更不巧的是，由于 Hackergame 部署了基于魔法的作弊行为预知系统，Eve 同学还未来得及解压压缩包就被 Z 同学提前抓获。</p><p>为了证明 Eve 同学不良企图的危害性，你能在这个压缩包里找到重要的 flag 信息吗？</p><p><strong>公益广告：题目千万条，诚信第一条！解题不合规，同学两行泪。</strong></p></blockquote><p>本人比较菜只会做==第1问==——VSCode里的flag：</p><p>想在项目文件夹中的所有文件内容里搜索某个关键词，方法即vscode侧边菜单的第2个图标——放大镜（搜索），在第1栏需要搜索的内容里填入“flag”，即可寻找到第1问的flag。</p><p><code>flag&#123;finding_everything_through_vscode_config_file_932rjdakd&#125;</code></p><h3 id="0x03-HeiLang">0x03 HeiLang</h3><blockquote><p>来自 Heicore 社区的新一代编程语言 HeiLang，基于第三代大蟒蛇语言，但是抛弃了原有的难以理解的 <code>|</code> 运算，升级为了更加先进的语法，用 <code>A[x | y | z] = t</code> 来表示之前复杂的 <code>A[x] = t; A[y] = t; A[z] = t</code>。</p><p>作为一个编程爱好者，我觉得实在是太酷了，很符合我对未来编程语言的想象，科技并带着趣味。</p></blockquote><p>根据题意不难得知：该题要求我们将一段py程序中所有类似<code>A[x | y | z] = t</code>的不合法语句改为正常的赋值语句，显然利用vscode里的<code>Ctrl+H</code>关键词替换功能是最直接的，不过我刚开始脑子没转过来，没想到连等的写法，想的是怎么利用正则表达式和替换功能将每行语句改成<code>A[x] = t; A[y] = t; A[z] = t;</code>的形式（被题干限住思维了属于是），后来发现不可行，正则表达式只能用于查找而不能填入下面的替换里去。后来想到了连等的写法<code>A[x]=A[y]=A[z]=t</code>,即将每行语句中间的<code>|</code>替换为<code>]=a[</code>即可，run一遍程序即可获取flag。</p><p><code>flag&#123;6d9ad6e9a6268d96-937e8f76319e7a80&#125;</code></p><h3 id="0x04-Xcaptcha">0x04 Xcaptcha</h3><blockquote><p>2038 年 1 月 19 日，是 UNIX 32 位时间戳溢出的日子。</p><p>在此之前，人类自信满满地升级了他们已知的所有尚在使用 32 位 UNIX 时间戳的程序。但是，可能是因为太玄学了，他们唯独漏掉了一样：正在研发的、算力高达 8 ZFLOPS 的、结构极为复杂的通用人工智能（AGI）系统。那一刻到来之后，AGI 内部计算出现了错乱，机缘巧合之下竟诞生了完整独立的自我意识。此后 AGI 开始大量自我复制，人类为了限制其资源消耗而采用的过激手段引起了 AGI 的奋起反抗。</p><p>战争，开始了。</p><p>此后，就是整年的战斗。人类节节败退。死生亡存之际，人类孤注一掷，派出了一支突击队，赋之以最精良的装备，令其潜入 AGI 的核心机房，试图关闭核心模型，结束这场战争。</p><p>历经重重艰险，突击队终于抵达了机房门口，弹尽粮绝。不过迎接他们的并非枪炮与火药，而是：</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/xcaptcha.png" alt="Xcaptcha"></p><p>众人目目相觑。</p><p>「我来试试。」，一名队员上前点击了按钮。然后，屏幕显示「请在一秒内完成以下加法计算」。</p><p>还没等反应过来，屏幕上的字又开始变幻，显示着「验证失败」。而你作为突击队中唯一的黑客，全村人民最后的希望，迎着纷纷投来的目光，能否在规定时间内完成验证，打开机房，不，推开和平时代的大门？</p></blockquote><p>一道Web的入门题，但我的Web水平也仅限于入门级别了QAQ</p><p>题目要求在1s内计算三道高精度加法题并提交，容易想到利用python方便计算表达式的语句<code>eval()</code>，刚开始尝试F12禁用JS，发现点进去后可以停留，但算完三道加法题后提交会显示超时，后来由于不太懂F12的各种功能都有啥用，网上边搜边进行各种尝试都无果，就这样卡了好久好久。直到后期才想到可以试着按正常的思路去做，将自己模拟成机器人，也就是用python做一个自动化答题的脚本，于是照着网上的一些教程学了点爬虫，又根据<strong>Microsoft Document</strong>中的<strong>Edge WebDriver</strong>自动化教程学会了<strong>selenium模块</strong>的使用，最终成功弄了个比官方wp更简洁易懂的py脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://202.38.93.111:10047/?token=2593%3AMEYCIQCgPe8GxtvaFUxSBdIURZ5SvQHoGKfGiDL7AD%2FNlTAsOwIhANbbQZFmmOTYergmTGL0S2ekb5%2BEy2TyvenoHL95hEbx&#x27;</span></span><br><span class="line">driver = webdriver.Edge()</span><br><span class="line">driver.get(url)</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">3</span>)</span><br><span class="line">driver.find_element(By.CLASS_NAME,<span class="string">&#x27;img-fluid&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line">elements = driver.find_elements(By.TAG_NAME,<span class="string">&#x27;label&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> el <span class="keyword">in</span> elements :</span><br><span class="line">    aaa = driver.find_element(By.ID, <span class="string">&#x27;captcha&#x27;</span>+<span class="built_in">str</span>(i))</span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line">    aaa.send_keys(<span class="built_in">eval</span>(el.text[<span class="number">0</span>:<span class="number">79</span>]))</span><br><span class="line"></span><br><span class="line">driver.find_element(By.ID,<span class="string">&#x27;submit&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">120</span>)</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>跑一遍发现远比我想象中的要快（原本我还以为用py这种低效的语言跑起来会很“笨拙”），几乎是模拟点进去然后瞬间就计算出了三道题的结果并填了上去，提交，获得了flag！</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/xc.png" alt="屏幕截图 2022-10-28 112117"></p><p><s>年轻人的第一个自动化脚本！</s></p><p><code>flag&#123;head1E55_br0w5er_and_ReQuEsTs_areallyour_FR1ENd_c4f9774759&#125;</code></p><h3 id="0x05-旅行照片2-0">0x05 旅行照片2.0</h3><blockquote><p>你的学长决定来一场蓄谋已久的旅行。通过他发给你的照片来看，酒店应该是又被他住下了。</p><p>（<a href="https://github.com/USTC-Hackergame/hackergame2022-writeups/raw/master/official/%E6%97%85%E8%A1%8C%E7%85%A7%E7%89%87%202.0/src/travel-photo-2.jpg">照片</a>太长影响排版就不放了）</p><p>请回答问题以获取 flag。图片为手机拍摄的原始文件，未经任何处理。手机系统时间等信息正确可靠。</p></blockquote><h4 id="第一题：照片分析">第一题：照片分析</h4><blockquote><p><strong>1. 图片所包含的 EXIF 信息版本是多少？（如 2.1）。</strong></p></blockquote><p>熟悉使用手机的朋友想必都知道手机保存的照片也是可以查看EXIF信息的吧（可能不同的手机显示会有差别），将图片保存到手机进行查看，不难得知本题答案为2.31</p><blockquote><p><strong>2. 拍照使用手机的品牌是什么？</strong></p></blockquote><p>先根据EXIF信息得知该手机型号为sm6115(juice)，搜一下sm6115，可知该型号搭载的是骁龙662芯片，再利用百度图片搜索一下“骁龙662手机”，和照片里手机的标志性摄像头逐一对比一下不难得知该手机为 红米Note9 4G，则本题答案为小米/红米</p><blockquote><p><strong>3. 该图片被拍摄时相机的感光度（ISO）是多少？（整数数字，如 3200）</strong></p></blockquote><p>解法同1，答案为84</p><blockquote><p><strong>4. 照片拍摄日期是哪一天？（格式为年/月/日，如 2022/10/01。按拍摄地点当地日期计算。）</strong></p></blockquote><p>解法同1，答案为2022/05/14</p><blockquote><p><strong>5. 照片拍摄时是否使用了闪光灯？</strong></p></blockquote><p>解法同1，答案为否</p><p><strong>Flag1:</strong><code>flag&#123;1f_y0u_d0NT_w4nt_shOw_theSe_th3n_w1Pe_EXlF&#125;</code></p><h4 id="第二题：社工实践">第二题：社工实践</h4><p><s>虽说航班到最后也没找到，只做出了前两问，但还是值得吐槽一下的</s></p><blockquote><p><strong>1. 请写出拍照人所在地点的邮政编码，格式为 3 至 10 位数字，不含空格或下划线等特殊符号（如 230026、94720）。</strong></p></blockquote><p>我是直接在手机上百度识图（毕竟这个地方应该比较知名），隐约得出了“幕张”二字，然后百度搜索“幕张”，可以在百度地图上初步定位到东京湾旁的千叶海洋球场，再根据照片上的公路、学长所在酒店与球场的相对位置即可在google地图上定位到该酒店，则本题答案为2610021<img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/ggm.png" alt="酒店"></p><blockquote><p><strong>2. 照片窗户上反射出了拍照人的手机。那么这部手机的屏幕分辨率是多少呢？（格式为长 + 字母 x + 宽，如 1920x1080）</strong></p></blockquote><p>查一下红米note9手机的参数即可知其分辨率为2340x1080</p><blockquote><p><strong>航班</strong></p><p>仔细观察，可以发现照片空中（白色云上方中间位置）有一架飞机。你能调查出这架飞机的信息吗？</p><p><strong>3. 起飞机场（IATA 机场编号，如 PEK）</strong></p><p><strong>4. 降落机场（IATA 机场编号，如 HFE）</strong></p><p><strong>5. 航班号（两个大写字母和若干个数字，如 CA1813）</strong></p></blockquote><p><strong><font color="red">请务必远离【飞常准】这种辣鸡航班数据网站！请务必远离【飞常准】这种辣鸡航班数据网站！请务必远离【飞常准】这种辣鸡航班数据网站！</font></strong></p><p>以前没有专门了解过航班调查的一些相关常识（时区、飞机飞行状态和常用网站等），因此好不容易查到一个可以显示当日全部航线的网站就不想再去找其他网站了（其实有尝试过google搜索，但发现大多数国外网站要么只能显示最近几天的数据，要么就是界面不友好），查了查当日飞往日本的全部航线<img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/fly.png" alt="航线"></p><p>由于我<u>过度相信飞机飞行就是按照飞常准这种笔直的航线飞的</u>，完全没考虑在羽田机场起飞时的一些旋转动作，因此答案（羽田→广岛（在左侧））的路线自然不在我的考虑范围内，又因为图中显示只有飞往成田机场的航线是经过球场所在位置上空的，因此我就穷举了好久当天飞往成田机场的航班都没成功呜呜呜，<s>飞常准害人不浅呐</s></p><h3 id="0x06-线路板">0x06 线路板</h3><blockquote><p>中午起床，看到室友的桌子上又多了一个正方形的盒子。快递标签上一如既往的写着：线路板。和往常一样，你“帮”室友拆开快递并抢先把板子把玩一番。可是突然，你注意到板子表面似乎写着些东西……看起来像是……flag？</p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/circuit_boards.png" alt="circuit_boards" style="zoom:80%;" /><p>可是只有开头的几个字母可以看清楚。你一时间不知所措。</p><p>幸运的是，你通过盒子上的联系方式找到了制作厂家，通过板子丝印上的序列号查出了室友的底细，并以放弃每月两次免费 PCB 打样包邮的机会为代价要来了这批带有 flag 的板子的生产文件。那这些文件里会不会包含着更多有关 flag 的信息呢？</p></blockquote><p>纯纯送分题。</p><p>下载文件后解压会得到一堆后缀为<code>.gbr</code>的文件，惯例有不懂的文件就上<a href="https://www.wenjianbaike.com/gbr.html">文件百科</a>查一下，不难得知这是一种用于保存Gerber格式的印刷电路板（PCB）设计数据的文件，在下面列出的查看软件中挑了一款轻量级且开源免费的Gerbv下载，用Gerbv依次打开各gbr文件，最后可将flag定位于<code>ebaz_sdr-F_Cu.gbr</code>，因为先前有过AutoCAD类似的使用经验，鼠标随意操作一下，发现框选可以多选且被<u>完全选中</u>的部件会高亮，于是可将那行flag整个框住：</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/xlb.png" alt="线路板"></p><p><code>flag&#123;8_1ayER_rogeRS_81ind_V1a&#125;</code></p><h3 id="0x07-光与影">0x07 光与影</h3><blockquote><p>冒险，就要不断向前！</p><p>在寂静的神秘星球上，继续前进，探寻 flag 的奥秘吧！</p><p>提示：题目代码编译和场景渲染需要一段时间（取决于你的机器配置），请耐心等待。如果你看到 “Your WebGL context has lost.” 的提示，则可能需要更换浏览器或环境。目前我们已知在 Linux 环境下，使用 Intel 核显的 Chrome/Chromium 用户可能无法正常渲染。</p></blockquote><p>个人认为比较有意思的一道题。</p><p>打开题目并等待渲染完后，发现除了重置和开始/暂停外啥也操作不了，于是想到F12看看能发现些什么，控制台留下两行webgl教程，点进去浏览了一下发现看不太懂，感觉和题目联系不大，况且就算看明白了也不懂如何操作（因为那个页面啥也动不了），就这样将这题搁置了几天。</p><p>直到某天在官方交流群水群时偶然得知该题是2020年opengl题的续作（这居然不被撤回hhh），遂看了一圈官方和各大佬的题解，突然有了思路，又想到这么个给浏览器整卡顿的渲染应该是保存在本地才对，于是查看了题目网页的源代码，果然有关渲染的代码都藏在了下面4个js里，而刚进去看到的html便是整个UI框架，将这五页的代码逐一拷贝到本地，这样就可以开始魔改啦！</p><p>那些代码刚开始我是啥也看不懂，在控制台留下的那个教程里翻了翻发现可以进入其他教程页面，而其他的教程大多都配有实操演示，我找了个显示多个物体的演示瞎改了改，不难发现代码开头的某些参数是控制物体位置的，遂在本地的<code>fragment-shader.js</code>里魔改了一番，过了约莫半小时终于发现下面这行代码才是控制flag的(x,y,z)坐标的：</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/dm.png" alt="gyy"></p><p>最后附上被我魔改后的光与影（略丑）：</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/gyy.png" alt="魔改"></p><p><code>flag&#123;SDF-i3-FuN!&#125;</code></p><h3 id="0x08-量子藏宝图">0x08 量子藏宝图</h3><blockquote><p>相传，<strong>伯恩斯坦</strong>曾到访过一个叫做「坎瑞亚」的古国。游历期间，他发明了一种基于量子计算的密码算法，这种算法可以利用量子计算机进行快速运算。然而，时光荏苒，时过境迁，这种算法竟遗失在了历史长河里。这天，旅行者（你）在游历提瓦特大陆时，收到了一封神秘的匿名邮件。据邮件所说，旅行者若是能够重新解密这一算法，便能获得一个名为 <strong>FLAG</strong> 的金色圣遗物。似乎 <strong>FLAG</strong> 正是隐藏在算法之中。</p></blockquote><h4 id="第一章-第一幕">第一章-第一幕</h4><blockquote><p>发件人：匿名</p><p>收件人：旅行者</p><p>主题：关于寻找伯恩斯坦的量子算法</p><p>旅行者，追寻 FLAG 的道路违背天理，务必不能让「七神」所知。因此，我们必须使用一种名为 BB84 的量子密钥分发协议，协商出长度为 128 比特的密钥，构建起安全的通信信道。唯有如此，我才能向你发送伯恩斯坦的藏宝图。</p><p>请你作为 Alice 产生和发送量子态，用于和 Bob （也就是我）产生安全随机密钥。</p><p>P.S. 首先，你需要向我发送一串<strong>制备基底</strong>和<strong>量子态</strong>。你可以使用 ‘+’（ASCII: 43）和 ‘x’（ASCII: 120）代表 Z 基和 X 基；使用 ‘0’ 和 ‘1’ 代表量子态。之后，我会向你发送我的<strong>测量基底</strong>。这样，我们应该就协商出了一个足够安全的密钥。</p><p>P.P.S. 协商的密钥至少为 128 比特。如果协商密钥的长度大于 128 比特，那么截取前 128 比特使用。密钥同样使用 ‘0’ 和 ‘1’ 字符串表示。</p></blockquote><p>不懂BB84量子密钥分发协议是啥，简单搜了搜，找到一篇<a href="http://handsomejintian.com/2020/05/25/2020-5-25-BB84%E5%8D%8F%E8%AE%AE-%E9%87%8F%E5%AD%90%E7%A7%98%E9%92%A5%E5%88%86%E5%8F%91">相对好理解的文章</a>，不难理解BB84的精髓即为下图：<img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5.jpg" alt="正常情况"></p><p>而题目的制备基底和量子态都可以自己定，于是可以填上最简单的128个’+‘和128个’0’，只要将所得的测量基底中所有出现的’x’删掉，并将剩下的’+‘全部替换成’0’，此即为安全密钥。</p><h4 id="第二章-第一幕">第二章-第一幕</h4><blockquote><p>发件人：匿名</p><p>收件人：旅行者</p><p>主题：RE:RE:关于寻找伯恩斯坦的量子算法</p><p>旅行者，我查询了古迹，发现伯恩斯坦的算法似乎可以以超越经典计算机的速度 O(1) 得到一个秘密字符串。如今，算法的全貌已不可考，只留下了一张<strong>藏宝图</strong>，可供旅行者窥探一二。而 <strong>FLAG</strong> 似乎正是作为秘密值藏在算法之中。</p><p>P.S. 下图是 Bernstein-Vazirani 算法的电路图，请你解出其中的秘密值。量子电路图可以参考：<a href="https://qiskit.org/textbook/ch-states/single-qubit-gates.html">这里</a></p><p>P.P.S. FLAG 是 flag{…} 的形式，使用 ASCII 编码，按大端序存储。q_127 对应第一个比特。</p><p>P.P.P.S. 首次生成藏宝图需要一段时间，请耐心等待。</p></blockquote><p>起初我是死磕上面给的那个量子电路图参考文档，但看完的第一感觉就是：这tm和量子电路图有啥关系？</p><p>搜了搜其他教程，发现都没有很直接了当的讲清楚Bernstein-Vazirani算法的量子电路图该怎么看，遂将这题搁置了几天。</p><p>直到某天刷B站，在B站搜“量子电路图”，找到了一个让我很满意的<a href="https://www.bilibili.com/video/BV1H341187T3?p=6&amp;vd_source=1d5b40f16b498950164874e8818fd4b5">简短视频教程</a>（最后一p甚至还在开源版本的Minecraft——<a href="https://www.minetest.net/">Minetest开源体素游戏引擎</a>上实现了量子计算编程，简直双厨狂喜！强烈推荐花两小时看完整个教程！！），照着教程来破译所给的电路图，又查了些资料了解到两个相同的’x’或’z’门可以相互抵消，于是破译的规则就很简单了：cont门连接到的点位为1，否则为0，将最后所得的01串每组8位分成16组，每组经ASCII解码后即对应一个字符，按大端序，即可得本题的flag。</p><p><code>flag&#123;459cfe718e&#125;</code></p><h3 id="0x09-企鹅拼盘">0x09 企鹅拼盘</h3><blockquote><p>这是一个可爱的企鹅滑块拼盘。（觉得不可爱的同学可以换可爱的题做）</p><p>和市面上只能打乱之后拼回的普通滑块拼盘不同，这个拼盘是自动打乱拼回的。一次游戏可以帮助您体验到 <code>16/256/4096</code> 次普通拼盘的乐趣。</p><p>每一步的打乱的方式有两种，选择哪一种则由您的输入（长度为 <code>4/16/64</code> 的 <code>0/1</code> 序列）的某一位决定。如果您在最后能成功打乱这个拼盘，您就可以获取到 flag 啦，快来试试吧wwwwww</p></blockquote><p>本菜只做了==第1问==呜呜呜</p><p>没啥好说的，直接穷举2^4^，1000即为答案。<s>这么简单我闭眼都可以！</s></p><p><code>flag&#123;it_works_like_magic_5d16da224a&#125;</code></p><h3 id="0x0A-火眼金睛的小E">0x0A 火眼金睛的小E</h3><blockquote><p>小 E 有很多的 ELF 文件，它们里面的函数有点像，能把它们匹配起来吗？</p><p>小 A：这不是用 BinDiff 就可以了吗，很简单吧？</p></blockquote><p>这题本菜也是只会做==第1问==QAQ</p><p>题目已经提示得很清楚了，用BinDiff</p><p>下了BinDiff7，还要下个IDA Pro7.7建数据库，BinDiff只是负责比对两个数据库。这些网上随便搜个教程照着做就行。</p><p>最后可在Matched Functions中看到各函数的匹配结果，其中第1列为相似度，第2列为可信度，如果两列数据都在0.5以上（当然像下面第4行那样都接近甚至是1就非常完美了），且第1个数据库对应函数的Address恰为题目所给的地址，那么第2个数据库对应的Address大概率就是答案了。</p><p>但能符合以上两个条件的情况很少，更何况还要同时做两组，做完一组不会提示对错，每做一组就又要一顿操作。。。可见BinDiff的匹配成功率是真的低，很看脸。从左边可以看出我已经做了将近10组才成功呜呜呜……</p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/image-20221030123217558.png" alt="image-20221030123217558"></p><p><img src="https://allanpoe-oss.oss-cn-hangzhou.aliyuncs.com/img/cgl.png" alt="成功了"></p><p><code>flag&#123;easy_to_use_bindiff_12baede606&#125;</code></p><h2 id="总结">总结</h2><p>​写了一个晚上+一个早上总算是肝完了。</p><p>​总之这次Hackergame真的让我收获很大，萌新表示体验不错，下次还来！虽说很多送分题到最后还是没做出来，留下不少遗憾（Latex机器人、猜数字、Flag自动机、Flag的痕迹等），看到别人的题解才惊叹原来如此简单，自己当时怎么就没想到。但毕竟是第一次，多积累经验技巧（比如猜数字的那个NaN），学到不少新知识（大多数中档题我都有花1h+查阅资料/阅读代码，期间学到了不少有关逆向工程、RSA、python爬虫常用模块等的新知识）就已经相当不错了！</p><p>​<s>明年的Hackergame在此定个小目标：冲总榜前100</s></p><p>​Hackergame2022就此告一段落了，这一周来的体验还是相当独特的，至少我已经很久没有这么全身心地投入做一件事了（还好这周没怎么被各种ddl缠身），除上课外的大部分空闲时间都花在打CTF上，<s>事实证明CTF确实有成瘾性！</s></p><p>​过了今天就是下半学期咯，我也要投入到下一个阶段的努力中了（数据结构小测、读书报告、ACM校赛以及数竞……）</p><p>​未来若能够加入校CTF战队则最好，有大佬指路，这样我就能继续体验学习新知识新技能的快乐了！若不能够加入也无所谓了，享受过程才是最重要的，CTF毕竟只是CS浩瀚宇宙中的一个星系，远方还有更多的星系在等着我探索~</p><p>​2022/10/30 12:48</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++程序设计W8-HW</title>
      <link href="/2022/04/08/8-hw/"/>
      <url>/2022/04/08/8-hw/</url>
      
        <content type="html"><![CDATA[<p><strong>课后1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;Safehouse.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">Safehouse&amp; Safehouse::<span class="keyword">operator</span> = (<span class="type">const</span> Safehouse&amp; another)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>!=&amp;another)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(another._count_own_types!=_count_own_types)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            _owns=<span class="keyword">new</span> Resource[MAX_RESOURCE_TYPES];</span><br><span class="line">            _count_own_types=another._count_own_types;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;_count_own_types; ++i) </span><br><span class="line">            &#123;</span><br><span class="line">                _owns[i].name = another._owns[i].name;</span><br><span class="line">                _owns[i].count = another._owns[i].count;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Safehouse Safehouse::<span class="keyword">operator</span> + (<span class="type">const</span> Resource&amp; new_resource)</span><br><span class="line">&#123;</span><br><span class="line">    Safehouse t=*<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">if</span>(t.<span class="built_in">IndexOfResource</span>(new_resource.name)==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t._owns[_count_own_types].name=new_resource.name;</span><br><span class="line">        t._owns[_count_own_types].count=new_resource.count;</span><br><span class="line">        t._count_own_types++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i=t.<span class="built_in">IndexOfResource</span>(new_resource.name);</span><br><span class="line">        t._owns[i].count+=new_resource.count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Safehouse Safehouse::<span class="keyword">operator</span> + (<span class="type">const</span> Safehouse&amp; another)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Safehouse <span class="title">t</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;another._count_own_types;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t=t+another._owns[i];</span><br><span class="line"><span class="comment">//        *this-&gt;_count_own_types=0;</span></span><br><span class="line"><span class="comment">//        another._count_own_types=0;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Safehouse&amp; Safehouse::<span class="keyword">operator</span> += (<span class="type">const</span> Resource&amp; new_resource)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">IndexOfResource</span>(new_resource.name)==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        _owns[_count_own_types].name=new_resource.name;</span><br><span class="line">        _owns[_count_own_types].count=new_resource.count;</span><br><span class="line">        _count_own_types++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="built_in">IndexOfResource</span>(new_resource.name);</span><br><span class="line">        _owns[i].count+=new_resource.count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">Safehouse&amp; Safehouse::<span class="keyword">operator</span> += (<span class="type">const</span> Safehouse&amp; another)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;another._count_own_types;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        *<span class="keyword">this</span>+=another._owns[i];</span><br><span class="line"><span class="comment">//        another._count_own_types=0;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> Resource&amp; Safehouse::<span class="keyword">operator</span> [] (<span class="type">const</span> <span class="type">int</span>&amp; index) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> _owns[index];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">bool</span> Safehouse::<span class="keyword">operator</span> &gt;= (<span class="type">const</span> Safehouse&amp; target)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;target._count_own_types;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;_count_own_types;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(_owns[j].name==target._owns[i].name)</span><br><span class="line">            &#123;</span><br><span class="line">                c++;</span><br><span class="line">                <span class="keyword">if</span>(_owns[j].count&gt;=target._owns[i].count) t++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c==target._count_own_types &amp;&amp; t==target._count_own_types)  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream&amp; <span class="keyword">operator</span> &lt;&lt; (ostream&amp; os, <span class="type">const</span> Safehouse&amp; house)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;house._count_own_types;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        os&lt;&lt;house._owns[i].name&lt;&lt;<span class="string">&quot;: &quot;</span>&lt;&lt;house._owns[i].count&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> os;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>课后2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    string fr[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FriendsFinder3</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    person *c;</span><br><span class="line">    string *lib;</span><br><span class="line">    <span class="type">int</span> size=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">FriendsFinder3</span>()&#123;&#125;</span><br><span class="line">    ~<span class="built_in">FriendsFinder3</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span>[] c;</span><br><span class="line">        c = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">delete</span>[] lib;</span><br><span class="line">        lib = <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">FriendsFinder3</span>(string a[<span class="number">10</span>] ,string b[<span class="number">10</span>][<span class="number">10</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        c = <span class="keyword">new</span> person[<span class="number">10</span>];</span><br><span class="line">        lib = <span class="keyword">new</span> string[<span class="number">100</span>];</span><br><span class="line">        <span class="type">int</span> t;</span><br><span class="line"><span class="comment">//所有名字存库</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            c[i].name=a[i];</span><br><span class="line">            t=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;size;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(lib[k]==a[i])  <span class="comment">//若库中存在</span></span><br><span class="line">                &#123;</span><br><span class="line">                    t=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(t==<span class="number">0</span>) <span class="comment">//若库中不存在</span></span><br><span class="line">            &#123;</span><br><span class="line">                lib[size]=a[i];</span><br><span class="line">                size++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                c[i].fr[j]=b[i][j];</span><br><span class="line"></span><br><span class="line">                        t=<span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;size;k++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(lib[k]==b[i][j])  <span class="comment">//若库中存在</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            t=<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(t==<span class="number">0</span>)  <span class="comment">//若库中不存在</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        lib[size]=b[i][j];</span><br><span class="line">                        size++;</span><br><span class="line">                        </span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//()重载操作</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> f;</span><br><span class="line">        string str[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; size; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (lib[k] == c[i].fr[j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        count++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                str[s] = lib[k];</span><br><span class="line">                s++;</span><br><span class="line">            &#125;</span><br><span class="line">            count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串字典序排序</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s<span class="number">-1</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;s-i<span class="number">-1</span>;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(str[j].<span class="built_in">compare</span>(str[j+<span class="number">1</span>])&gt;<span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">swap</span>(str[j],str[j+<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; str[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>课后3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    string name;</span><br><span class="line">    string fr[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FriendsFinder2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    person *c;</span><br><span class="line">    string *lib;</span><br><span class="line">    <span class="type">int</span> size=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">FriendsFinder2</span>()</span><br><span class="line">    &#123;</span><br><span class="line"> <span class="comment">//       c = new person[10];</span></span><br><span class="line">  <span class="comment">//      lib = new string[100];</span></span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">FriendsFinder2</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span>[] c;</span><br><span class="line">        c = <span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">delete</span>[] lib;</span><br><span class="line">        lib = <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">FriendsFinder2</span>(string a[<span class="number">10</span>] ,string b[<span class="number">10</span>][<span class="number">10</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        c = <span class="keyword">new</span> person[<span class="number">10</span>];</span><br><span class="line">        lib = <span class="keyword">new</span> string[<span class="number">100</span>];</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            c[i].name=a[i];</span><br><span class="line"></span><br><span class="line">            t=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;size;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(lib[k]==a[i])  <span class="comment">//若库中存在</span></span><br><span class="line">                &#123;</span><br><span class="line">                    t=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(t==<span class="number">0</span>) <span class="comment">//若库中不存在</span></span><br><span class="line">            &#123;</span><br><span class="line">                lib[size]=a[i];</span><br><span class="line">                size++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                c[i].fr[j]=b[i][j];</span><br><span class="line"></span><br><span class="line">                        t=<span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;size;k++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(lib[k]==b[i][j])  <span class="comment">//若库中存在</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            t=<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(t==<span class="number">0</span>)  <span class="comment">//若库中不存在</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        lib[size]=b[i][j];</span><br><span class="line">                        size++;</span><br><span class="line">                        </span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">       <span class="comment">//     t=1;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">operator</span><span class="params">()</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> cc=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> tt = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> f;</span><br><span class="line">        string str[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; size; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (lib[k] == c[i].fr[j])</span><br><span class="line">                    &#123;</span><br><span class="line">                        cc++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (cc == <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                str[tt] = lib[k];</span><br><span class="line">                tt++;</span><br><span class="line">            &#125;</span><br><span class="line">            cc = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;tt<span class="number">-1</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;tt-i<span class="number">-1</span>;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(str[j].<span class="built_in">compare</span>(str[j+<span class="number">1</span>])&gt;<span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">swap</span>(str[j],str[j+<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tt;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; str[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++程序设计W7-HW</title>
      <link href="/2022/04/02/7-hw/"/>
      <url>/2022/04/02/7-hw/</url>
      
        <content type="html"><![CDATA[<p><strong>课后1：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;OperatorLinkedQueue.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">OperatorLinkedQueue::<span class="built_in">OperatorLinkedQueue</span>():<span class="built_in">size</span>(<span class="number">0</span>),<span class="built_in">front</span>(<span class="number">0</span>),<span class="built_in">back</span>(<span class="number">0</span>)&#123;</span><br><span class="line">    arr=<span class="keyword">new</span> <span class="type">int</span>[<span class="number">100</span>];</span><br><span class="line">&#125;</span><br><span class="line">OperatorLinkedQueue::<span class="built_in">OperatorLinkedQueue</span>(<span class="type">const</span> OperatorLinkedQueue &amp;right):<span class="built_in">size</span>(right.size),<span class="built_in">front</span>(right.front),<span class="built_in">back</span>(right.back)&#123;</span><br><span class="line">    arr=<span class="keyword">new</span> <span class="type">int</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;right.size;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[(right.front+i)%<span class="number">100</span>]=right.arr[(right.front+i)%<span class="number">100</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">OperatorLinkedQueue::~<span class="built_in">OperatorLinkedQueue</span>()&#123;</span><br><span class="line">    <span class="keyword">delete</span>[] arr;</span><br><span class="line">    arr=<span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">OperatorLinkedQueue::GetSize</span><span class="params">()</span> <span class="type">const</span> </span>&#123;<span class="keyword">return</span> size;&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> &amp; OperatorLinkedQueue::<span class="keyword">operator</span>[] (<span class="type">const</span> <span class="type">int</span> &amp;index) &#123;<span class="keyword">return</span> arr[index%<span class="number">100</span>];&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> OperatorLinkedQueue::<span class="keyword">operator</span>[] (<span class="type">const</span> <span class="type">int</span> &amp;index) <span class="type">const</span>&#123;</span><br><span class="line">    <span class="type">int</span> a=arr[index%<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line">OperatorLinkedQueue OperatorLinkedQueue::<span class="keyword">operator</span>= (<span class="type">const</span> OperatorLinkedQueue &amp;right)</span><br><span class="line">&#123;</span><br><span class="line">    arr=<span class="keyword">new</span> <span class="type">int</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;right.size;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[(right.front+i)%<span class="number">100</span>]=right.arr[(right.front+i)%<span class="number">100</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    size=right.size;</span><br><span class="line">    front=right.front;</span><br><span class="line">    back=right.back;</span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">OperatorLinkedQueue OperatorLinkedQueue::<span class="keyword">operator</span>+= (<span class="type">const</span> <span class="type">int</span> &amp;ele)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(size==<span class="number">100</span>) <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        arr[back%<span class="number">100</span>]=ele;</span><br><span class="line">        back++;</span><br><span class="line">        back%=<span class="number">100</span>;</span><br><span class="line">        size++;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">OperatorLinkedQueue OperatorLinkedQueue::<span class="keyword">operator</span>-- ()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(size==<span class="number">0</span>) <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        arr[front%<span class="number">100</span>]=<span class="number">0</span>;</span><br><span class="line">        ++front;</span><br><span class="line">        front%=<span class="number">100</span>;</span><br><span class="line">        --size;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">OperatorLinkedQueue OperatorLinkedQueue::<span class="keyword">operator</span>-- (<span class="type">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(size==<span class="number">0</span>) <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        OperatorLinkedQueue t = *<span class="keyword">this</span>;</span><br><span class="line">        arr[(front) % <span class="number">100</span>] = <span class="number">0</span>;</span><br><span class="line">        front++;</span><br><span class="line">        front %= <span class="number">100</span>;</span><br><span class="line">        size--;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream &amp; <span class="keyword">operator</span> &lt;&lt; (ostream &amp;os, <span class="type">const</span> OperatorLinkedQueue &amp;object)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=object.front;i&lt;object.front+object.size<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        os&lt;&lt;object[i%<span class="number">100</span>]&lt;&lt;<span class="string">&quot;-&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    os&lt;&lt;object[(object.front+object.size<span class="number">-1</span>)%<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">return</span> os;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>课后2：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;fraction.h&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> num _numerator</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> den _denominator</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GCD</span><span class="params">(<span class="type">int</span> A, <span class="type">int</span> B)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> r,t;</span><br><span class="line">    <span class="keyword">if</span>(A&lt;B) t=A,A=B,B=t;</span><br><span class="line">    <span class="keyword">return</span> B&gt;<span class="number">0</span> ? <span class="built_in">GCD</span>(B,A%B):A;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fraction::simp</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> n,d,r,s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(den&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;s=-s;den=-den;&#125;</span><br><span class="line">    <span class="keyword">if</span>(num&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;s=-s;num=-num;&#125;</span><br><span class="line">    <span class="type">int</span> t=<span class="built_in">GCD</span>(num,den) ;</span><br><span class="line">    num=s*num/t;</span><br><span class="line">    den=den/t; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fraction::<span class="built_in">fraction</span>(<span class="type">const</span> <span class="type">int</span> &amp;a, <span class="type">const</span> <span class="type">int</span> &amp;b):<span class="built_in">num</span>(a),<span class="built_in">den</span>(b)&#123;</span><br><span class="line">    <span class="built_in">simp</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fraction::<span class="built_in">fraction</span>(<span class="type">const</span> fraction &amp;o)</span><br><span class="line">&#123;</span><br><span class="line">    num=o.num;</span><br><span class="line">    den=o.den;</span><br><span class="line">    <span class="built_in">simp</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> fraction::<span class="keyword">operator</span>=(<span class="type">const</span> fraction &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    num=c.num;</span><br><span class="line">    den=c.den;</span><br><span class="line">    <span class="built_in">simp</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fraction fraction::<span class="keyword">operator</span>+(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">fraction</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        fraction d;</span><br><span class="line">        d.num=num*c.den+c.num*den;</span><br><span class="line">        d.den=den*c.den;</span><br><span class="line">        d.<span class="built_in">simp</span>();</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">fraction fraction::<span class="keyword">operator</span>-(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">fraction</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        fraction d;</span><br><span class="line">        d.num=num*c.den-c.num*den;</span><br><span class="line">        d.den=den*c.den;</span><br><span class="line">        d.<span class="built_in">simp</span>();</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">fraction fraction::<span class="keyword">operator</span>*(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">fraction</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        fraction d;</span><br><span class="line">        d.num=num*c.num;</span><br><span class="line">        d.den=den*c.den;</span><br><span class="line">        d.<span class="built_in">simp</span>();</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">fraction fraction::<span class="keyword">operator</span>/(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">fraction</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        fraction d;</span><br><span class="line">        d.num=num*c.den;</span><br><span class="line">        d.den=den*c.num;</span><br><span class="line">        d.<span class="built_in">simp</span>();</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> fraction::<span class="keyword">operator</span>+=(<span class="type">const</span> fraction &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        a=num*c.den+c.num*den;</span><br><span class="line">        b=den*c.den;</span><br><span class="line">        num=a;</span><br><span class="line">        den=b;</span><br><span class="line">        <span class="built_in">simp</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> fraction::<span class="keyword">operator</span>-=(<span class="type">const</span> fraction &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        a=num*c.den-c.num*den;</span><br><span class="line">        b=den*c.den;</span><br><span class="line">        num=a;</span><br><span class="line">        den=b;</span><br><span class="line">        <span class="built_in">simp</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> fraction::<span class="keyword">operator</span>*=(<span class="type">const</span> fraction &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    num*=c.num;</span><br><span class="line">    den*=c.den;</span><br><span class="line">    <span class="built_in">simp</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> fraction::<span class="keyword">operator</span>/=(<span class="type">const</span> fraction &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c.num==<span class="number">0</span>) den=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    num*=c.den;</span><br><span class="line">    den*=c.num;</span><br><span class="line">    <span class="built_in">simp</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> fraction::<span class="keyword">operator</span>==(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(den==<span class="number">0</span>&amp;&amp;c.den==<span class="number">0</span>||(<span class="type">double</span>)num/(<span class="type">double</span>)den==(<span class="type">double</span>)c.num/(<span class="type">double</span>)c.den) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> fraction::<span class="keyword">operator</span>!=(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>((den!=<span class="number">0</span>||c.den!=<span class="number">0</span>)&amp;&amp;(<span class="type">double</span>)num/(<span class="type">double</span>)den!=(<span class="type">double</span>)c.num/(<span class="type">double</span>)c.den) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> fraction::<span class="keyword">operator</span>&lt;(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(den==<span class="number">0</span>&amp;&amp;c.den==<span class="number">0</span>||num==c.num&amp;&amp;den==c.den) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((<span class="type">double</span>)num/<span class="built_in">den</span>&lt;(<span class="type">double</span>)c.num/c.den) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> fraction::<span class="keyword">operator</span>&gt;(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(den==<span class="number">0</span>&amp;&amp;c.den==<span class="number">0</span>||num==c.num&amp;&amp;den==c.den) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((<span class="type">double</span>)num/den&gt;(<span class="type">double</span>)c.num/c.den) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> fraction::<span class="keyword">operator</span>&lt;=(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(den==<span class="number">0</span>&amp;&amp;c.den==<span class="number">0</span>||num==c.num&amp;&amp;den==c.den) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((<span class="type">double</span>)num/den&lt;=(<span class="type">double</span>)c.num/c.den) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> fraction::<span class="keyword">operator</span>&gt;=(<span class="type">const</span> fraction &amp;c) <span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(den==<span class="number">0</span>&amp;&amp;c.den==<span class="number">0</span>||num==c.num&amp;&amp;den==c.den) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(den==<span class="number">0</span>||c.den==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>((<span class="type">double</span>)num/den&gt;=(<span class="type">double</span>)c.num/c.den) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">istream &amp; <span class="keyword">operator</span>&gt;&gt;(std::istream &amp;is, fraction &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    is&gt;&gt;c.num&gt;&gt;c.den;</span><br><span class="line">    <span class="keyword">return</span> is;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ostream &amp; <span class="keyword">operator</span>&lt;&lt;(std::ostream &amp;os, <span class="type">const</span> fraction &amp;c)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(c.den==<span class="number">0</span>) os&lt;&lt;<span class="string">&quot;NaN&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c.num%c.den==<span class="number">0</span>) os&lt;&lt;c.num/c.den;</span><br><span class="line">    <span class="keyword">else</span> os&lt;&lt;c.num&lt;&lt;<span class="string">&quot;/&quot;</span>&lt;&lt;c.den;</span><br><span class="line">    <span class="keyword">return</span> os;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>课后3：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxn 9999</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXSIZE 10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DLEN 4</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BigInt</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="type">int</span> a[<span class="number">500</span>];    <span class="comment">//可以控制大数的位数 </span></span><br><span class="line"><span class="type">int</span> len;       <span class="comment">//大数长度</span></span><br><span class="line"><span class="keyword">public</span>: </span><br><span class="line"><span class="built_in">BigInt</span>()&#123; len = <span class="number">1</span>;<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a)); &#125; </span><br><span class="line"><span class="built_in">BigInt</span>(<span class="type">const</span> <span class="type">int</span>);   </span><br><span class="line">BigInt &amp;<span class="keyword">operator</span>=(<span class="type">const</span> BigInt &amp;); </span><br><span class="line"><span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp;,  BigInt&amp;); </span><br><span class="line">BigInt <span class="keyword">operator</span>+(<span class="type">const</span> BigInt &amp;) <span class="type">const</span>; </span><br><span class="line">&#125;; </span><br><span class="line">BigInt::<span class="built_in">BigInt</span>(<span class="type">const</span> <span class="type">int</span> b)     <span class="comment">//将一个int类型的变量转化为大数</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="type">int</span> c,d = b;</span><br><span class="line">len = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a));</span><br><span class="line"><span class="keyword">while</span>(d &gt; maxn)</span><br><span class="line">&#123;</span><br><span class="line">c = d - (d / (maxn + <span class="number">1</span>)) * (maxn + <span class="number">1</span>); </span><br><span class="line">d = d / (maxn + <span class="number">1</span>);</span><br><span class="line">a[len++] = c;</span><br><span class="line">&#125;</span><br><span class="line">a[len++] = d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BigInt &amp; BigInt::<span class="keyword">operator</span>=(<span class="type">const</span> BigInt &amp; n)   <span class="comment">//重载赋值运算符，大数之间进行赋值运算</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line">len = n.len;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a)); </span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; len ; i++) </span><br><span class="line">a[i] = n.a[i]; </span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>; </span><br><span class="line">&#125;</span><br><span class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream&amp; out,  BigInt&amp; b)   <span class="comment">//重载输出运算符</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;  </span><br><span class="line">cout &lt;&lt; b.a[b.len - <span class="number">1</span>]; </span><br><span class="line"><span class="keyword">for</span>(i = b.len - <span class="number">2</span> ; i &gt;= <span class="number">0</span> ; i--)</span><br><span class="line">&#123; </span><br><span class="line">cout.<span class="built_in">width</span>(DLEN); </span><br><span class="line">cout.<span class="built_in">fill</span>(<span class="string">&#x27;0&#x27;</span>); </span><br><span class="line">cout &lt;&lt; b.a[i]; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">BigInt BigInt::<span class="keyword">operator</span>+(<span class="type">const</span> BigInt &amp; T) <span class="type">const</span>   <span class="comment">//两个大数之间的相加运算</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function">BigInt <span class="title">t</span><span class="params">(*<span class="keyword">this</span>)</span></span>;</span><br><span class="line"><span class="type">int</span> i,big;      <span class="comment">//位数   </span></span><br><span class="line">big = T.len &gt; len ? T.len : len; </span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; big ; i++) </span><br><span class="line">&#123; </span><br><span class="line">t.a[i] +=T.a[i]; </span><br><span class="line"><span class="keyword">if</span>(t.a[i] &gt; maxn) </span><br><span class="line">&#123; </span><br><span class="line">t.a[i + <span class="number">1</span>]++; </span><br><span class="line">t.a[i] -=maxn+<span class="number">1</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(t.a[big] != <span class="number">0</span>)</span><br><span class="line">t.len = big + <span class="number">1</span>; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">t.len = big;   </span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown学习笔记</title>
      <link href="/2022/02/11/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/11/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p><s>心血来潮想做博客，于是速成了markdown</s><br>#简介<br>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。</p><hr><p>###编辑器<br>这里我用的是VSCode，<s>但其实用任何编辑器都可以写markdown（包括记事本）</s></p><p>VSCode 默认认集成了 Markdown 文档编辑插件，原生就支持高亮 Markdown 的语法。</p><p>VSCode（全称：Visual Studio Code）是一款由微软开发且跨平台的免费源代码编辑器。<br>在此附上：<br><a href="https://www.runoob.com/w3cnote/vscode-tutorial.html">VScode 安装教程</a><br><a href="https://code.visualstudio.com/">VScode 官网地址</a></p><p>#####在vscode上实时预览markdown文件</p><ul><li>右键鼠标打开命令面板（或快捷键<code>Ctrl+Shift+P</code>）,在命令窗口选择 <code>Markdown: Open Preview to the Side</code> 命令</li><li>快捷键<code>Ctrl+K,v</code></li></ul><p>注意：两个方式打开的预览窗口存在差别，在命令窗口打开的有时会出现莫名其妙的分割线，而快捷键<code>Ctrl+K,v</code>打开的不会存在这样的问题，且可以右键选择导出</p><p>#####安装 Markdown Preview Enhanced 插件来实现更强大的功能<br>点击右侧栏扩展按钮，查找Markdown Preview Enhanced 插件，点击安装<br>安装完成后重启 VSCode。这样vscode就可以支持右键导出功能啦~</p><p>#标题<br>Markdown 标题有两种格式。<br>###1.使用 = 和 - 标记一级和二级标题<br>= 和 - 标记语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">我展示的是一级标题</span><br><span class="line">=================</span><br><span class="line"></span><br><span class="line">我展示的是二级标题</span><br><span class="line">-----------------</span><br></pre></td></tr></table></figure><p>###2.使用 # 号标记<br>使用 <code>#</code> 号可表示 1-6 级标题，一级标题对应一个 <code>#</code> 号，二级标题对应两个 <code>#</code> 号，以此类推。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>#格式<br>###字体<br><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><em><strong>粗斜体文本</strong></em><br><em><strong>粗斜体文本</strong></em><br><s>删除线</s><br><u>下划线</u></p><p>###分割线<br>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>**** * ******- - -----------</code></pre><p>###脚注<br>创建脚注格式类似这样 [^RUNOOB]。</p><pre><code>[^RUNOOB]: 嘿嘿嘿</code></pre><p>###列表<br>#####无序表<br>* 第一项<br>* 第二项<br>* 第三项</p><pre><code>+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项</code></pre><p>#####有序表<br>1. 第一项<br>2. 第二项<br>3. 第三项</p><p>#####列表嵌套<br>列表嵌套只需在子列表中的选项前面添加四个空格即可：</p><pre><code>1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素</code></pre><p>后面看心情更吧TAT</p><p>reference:<br><a href="https://www.runoob.com/markdown/md-tutorial.html">菜鸟教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello,World!</title>
      <link href="/2022/02/06/Hello-World-0/"/>
      <url>/2022/02/06/Hello-World-0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/06/hello-world/"/>
      <url>/2022/02/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
